library(MASS) ; data(Pima.tr)

###
rmvnorm<-
  function(n,mu,Sigma) {
    p<-length(mu)
    res<-matrix(0,nrow=n,ncol=p)
    if( n>0 & p>0 ) {
      E<-matrix(rnorm(n*p),n,p)
      res<-t(  t(E%*%chol(Sigma)) +c(mu))
    }
    res
  }
###

###
rinvwish<-function(n,nu0,iS0) 
{
  sL0 <- chol(iS0) 
  S<-array( dim=c( dim(L0),n ) )
  for(i in 1:n) 
  {
    Z <- matrix(rnorm(nu0 * dim(L0)[1]), nu0, dim(iS0)[1]) %*% sL0  
    S[,,i]<- solve(t(Z)%*%Z)
  }     
  S[,,1:n]
}
###

###
ldmvnorm<-function(y,mu,Sig){  # log mvn density
  c(  -(length(mu)/2)*log(2*pi) -.5*log(det(Sig)) -.5*
        t(y-mu)%*%solve(Sig)%*%(y-mu)   )  
}
####

### sample from the Wishart distribution
rwish<-function(n,nu0,S0)
{
  sS0 <- chol(S0)
  S<-array( dim=c( dim(S0),n ) )
  for(i in 1:n)
  {
    Z <- matrix(rnorm(nu0 * dim(S0)[1]), nu0, dim(S0)[1]) %*% sS0
    S[,,i]<- t(Z)%*%Z
  }
  S[,,1:n]
}
###
data(Pima.tr)
Y<-Pima.tr[,2:7]
library(mvtnorm)
p<-dim(Y)[2]
mu0<-c(110,80,25,28,0.5,30) #set prior assumptions - rough guesses based on national averages
sd0<-mu0/2
L0<-matrix(0.1,p,p)
diag(L0)<-1
L0<-L0*outer(sd0,sd0)
nu0<-p+2
S0<-L0

n<-dim(Y)[1] ; ybar<-apply(Y,2,mean)
ybar
Sigma
Sigma<-cov(Y) ; THETA<-SIGMA<-NULL
YS<-NULL
set.seed(1)

for(s in 1:5000) 
{
  
  ###update theta
  Ln<-solve( solve(L0) + n*solve(Sigma) )
  mun<-Ln%*%( solve(L0)%*%mu0 + n*solve(Sigma)%*%ybar )
  theta<-rmvnorm(1,mun,Ln)  
  ### 
  
  ###update Sigma
  Sn<- S0 + ( t(Y)-c(theta) )%*%t( t(Y)-c(theta) ) 
  Sigma<-rinvwish(1,nu0+n,solve(Sn))
  ###
  
  ###
  YS<-rbind(YS,rmvnorm(1,theta,Sigma)) 
  ###
  
  ### save results 
  THETA<-rbind(THETA,theta) ; SIGMA<-rbind(SIGMA,c(Sigma))
  ###
 
}

apply(THETA,2,mean)

COR <- array( dim=c(p,p,1000) )
for(s in 1:1000)
{
  Sig<-matrix( SIGMA[s,] ,nrow=p,ncol=p)
  COR[,,s] <- Sig/sqrt( outer( diag(Sig),diag(Sig) ) )
}


apply(COR,c(1,2),mean)


##
##


##### convert SIGMA to an array of correlation parameters
library(sbgcop)
COR<-array(dim=c(p,p,dim(SIGMA)[1]) )
for(s in 1:dim(SIGMA)[1]) {
  Sig<-matrix( SIGMA[s,] ,nrow=p,ncol=p)
  COR[,,s] <- Sig/sqrt(outer( diag(Sig),diag(Sig)))
}
####
colnames(COR)<-rownames(COR)<-colnames(Y)

pdf("Fig4.pdf",height=6,width=6,family="Times")

par(mfcol=c(6,2),mar=c(1,2.75,1,1),mgp=c(1.75,.75,0),oma=c(1.5,0,0,0))
plotci.sA(COR)

REG<-sR.sC(COR)
plotci.sA(REG)
dev.off()

CQ<-apply(COR, c(1,2), quantile,prob=c(.025,.5,.975) )

round(CQ[1,,],2)
round(CQ[2,,],2)
round(CQ[3,,],2)

round(apply(COR,c(1,2),mean),2)




