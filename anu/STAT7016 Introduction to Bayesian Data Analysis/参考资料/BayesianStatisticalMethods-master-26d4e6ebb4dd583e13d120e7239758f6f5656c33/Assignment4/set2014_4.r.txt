### Problem 2 on Problem Set 4
rm(list=ls())

rmvnorm <- function(n,mu,Sigma) {
  p<-length(mu)
  res<-matrix(0,nrow=n,ncol=p)
  if( n>0 & p>0 ) {
    E<-matrix(rnorm(n*p),n,p)
    res<-t(  t(E%*%chol(Sigma)) +c(mu))
  }
  res
}

data <- read.table("http://www.uio.no/studier/emner/matnat/math/STK4021/h14/exercises/msparrownest.dat")
y <- data$V1
x <- data$V2
n <- length(y)

sum.y <- sum(y)
sum.xy <- sum(x*y)
print(sum.xy/sum(x))

acs <- 0
beta <- 0.8
alpha <- -10
param <- matrix(c(alpha,beta),2,1)
xx <- cbind(rep(1,n),x)
theta <- exp(xx%*%param)/(1+exp(xx%*%param))

sigma <- 7*solve(t(xx)%*%xx)
K <- 50000
PARAM <- array(NA,dim=c(2,K))

for(k in 1:K) {
  if(k %% 1000 == 0) print(k)
  param.p <- matrix(rmvnorm(1,mu=param,Sigma=sigma),2,1)
  theta.p <- exp(xx%*%param.p)/(1+exp(xx%*%param.p))
  log.r <- sum(dbinom(y,1,theta.p,log=TRUE)) -
    sum(dbinom(y,1,theta,log=TRUE)) +
      sum(dnorm(param.p,c(0,0),c(10,10),log=TRUE)) -
        sum(dnorm(param.p,c(0,0),c(10,10),log=TRUE)) 
  if(is.na(log.r)) log.r <- 0
  if( log(runif(1)) < log.r ) { param <- param.p; theta <- theta.p; acs <- acs + 1 }
  PARAM[,k] <- param
}
## print acceptance rate
print(acs/K*100) ## 51%

## calculate effective sample size
library(coda)
effectiveSize(PARAM[1,])
effectiveSize(PARAM[2,])

## compare to OLS
ols <- glm(y ~ x, family=binomial("logit"))
ols

## plot priors and posteriors
ALPHA <- PARAM[1,]
BETA <- PARAM[2,]
pdf(file="set2014_4problem1d.pdf",height=4,width=8,points=12)
par(mfrow=c(1,2))
z <- seq(-30,30,by=0.01)
hist(ALPHA,xlab="alpha",ylab="",col="gray40",xlim=c(-30,30),freq=FALSE)
lines(z,dnorm(z,0,10),col=2,lwd=2)
hist(BETA,xlab="beta",ylab="",col="gray40",xlim=c(-2,4),freq=FALSE)
lines(z,dnorm(z,0,10),col=2,lwd=2)
dev.off()

## confidence band for f
z <- seq(10,15,by=0.02)
n <- length(z)
BAND <- NULL
for( i in 1:n ) {
  BAND <- rbind(BAND,quantile( exp(ALPHA+z[i]*BETA)/(1 + exp(ALPHA+z[i]*BETA)), prob=c(.025,.5,.975) ))
}
pdf(file="set2014_4problem1e.pdf",height=4,width=4,points=12)
plot(z,BAND[,2],type="l",ylim=c(0,1),xlab="wingspan",ylab="f")
lines(z,BAND[,1],lty=2)
lines(z,BAND[,3],lty=2)
dev.off()