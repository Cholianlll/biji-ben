### Problem 1 on problem set 3
#########################################################################
### Part (a)
pdf(file="set2014_3problem1a.pdf",height=4,width=4,points=12)
data <- read.table("http://www.uio.no/studier/emner/matnat/math/STK4021/h14/exercises/glucose.dat")
y <- data$V1
hist(y,freq=FALSE,xlab="Plasma glucose concentration",col="gray80",main="",ylim=c(0,0.015),xlim=c(0,250),breaks=seq(0,250,by=10))
lines(density(y),col=2,lwd=2)
dev.off()
#########################################################################
### Part (c)
## set prior parameters
a <- 1
b <- 1
mu0 <- 120
tau0sq <- 200
sigma0sq <- 1000
nu0 <- 10
### Gibbs sampler
K <- 10000 # nr of iterations
n <- length(y)
## set initial values
p <- 0.5
X <- rbinom(n,size=1,prob=p)
theta1 <- rnorm(1,mean=mu0,sd=sqrt(tau0sq))
theta2 <- rnorm(1,mean=mu0,sd=sqrt(tau0sq))
sigma1sq <- 1/rgamma(1,shape=nu0/2,rate=nu0*sigma0sq/2)
sigma2sq <- 1/rgamma(1,shape=nu0/2,rate=nu0*sigma0sq/2)
for( i in 1:K )
{
  ## sample p and X
  p <- c(p, rbeta(1,shape1=a+sum(X),shape2=n-sum(X)+b))
  tmp1 <- p[i+1]*dnorm(y,mean=theta1[i],sd=sqrt(sigma1sq[i]))
  tmp2 <- (1-p[i+1])*dnorm(y,mean=theta2[i],sd=sqrt(sigma2sq[i]))
  p1 <- tmp1/(tmp1+tmp2)
  X <- rbinom(n,size=1,prob=p1)
  ## sample theta
  n1 <- sum(X)
  mu1 <- ( mu0/tau0sq + sum(y*(X==1))/sigma1sq[i] ) /
    ( 1/tau0sq + n1/sigma1sq[i] )
  tau1sq <- 1/( 1/tau0sq + n1/sigma1sq[i] )
  theta1 <- c(theta1,rnorm(1,mean=mu1,sd=sqrt(tau1sq)))
  n2 <- n - sum(X)
  mu2 <- ( mu0/tau0sq + sum(y*(X==0))/sigma2sq[i] ) /
    ( 1/tau0sq + n2/sigma2sq[i] )
  tau2sq <- 1/( 1/tau0sq + n2/sigma2sq[i] )
  theta2 <- c(theta2,rnorm(1,mean=mu2,sd=sqrt(tau2sq)))
  ## sample sigma (call sigma_{n,j}^2 etaj for simplicity)
  nu1 <- nu0 + n1
  eta1 <- ( nu0*sigma0sq + sum((y-theta1[i+1])^2 * (X==1)) )/nu1
  sigma1sq <- c(sigma1sq,1/rgamma(1,shape=nu1/2,rate=nu1*eta1/2))
  nu2 <- nu0 + n2
  eta2 <- ( nu0*sigma0sq + sum((y-theta2[i+1])^2 * (X==0)) )/nu2
  sigma2sq <- c(sigma2sq,1/rgamma(1,shape=nu2/2,rate=nu2*eta2/2))
}
## Autocorrelation
theta <- cbind(theta1[-1],theta2[-1])
theta.min <- apply(theta,1,min)
theta.max <- apply(theta,1,max)
pdf(file="set2014_3problem1b.pdf",height=4,width=8,points=12)
par(mfrow=c(1,2))
acf(theta.min)
acf(theta.max)
dev.off()
#########################################################################
### Part (d)
y.tilde <- NULL
for(i in 1:K)
{
  x <- rbinom(1,size=1,prob=p[i+1])
  if(x==1) y.tilde <- c(y.tilde,rnorm(1,mean=theta1[i+1],sd=sqrt(sigma1sq[i+1])))
  else y.tilde <- c(y.tilde,rnorm(1,mean=theta2[i+1],sd=sqrt(sigma2sq[i+1])))
}
pdf(file="set2014_3problem1c.pdf",height=4,width=4,points=12)
hist(y.tilde,freq=FALSE,xlab="Estimated plasma glucose concentration",col="gray80",main="",ylim=c(0,0.015),xlim=c(0,250),breaks=seq(0,270,by=10))
lines(density(y.tilde),col=3,lwd=2)
lines(density(y),col=2,lwd=2)
dev.off()

#########################################################################
#########################################################################
### Problem 2 on problem set 3
rm(list=ls())
data <- read.table("http://www.uio.no/studier/emner/matnat/math/STK4021/h14/exercises/divorce.dat")
x <- data$V1
y <- data$V2
## Set prior parameters
tauBsq <- 16
tauCsq <- 16
## Gibbs sampler
library(msm)
K <- 30000 # nr of iterations
n <- length(y)
## set initial values
beta <- rnorm(1,mean=0,sd=sqrt(tauBsq))
c <- rnorm(1,mean=0,sd=sqrt(tauCsq))
z <- NULL
for( j in 1:n)
  {
    m <- beta*x[j]
    if(y[j]==1) z <- c(z,rtnorm(1,mean=m,sd=1,lower=c))
    else z <- c(z,rtnorm(1,mean=m,sd=1,upper=c))
  }
z <- as.matrix(z)
z <- t(z)
## parameters that don't change 
kappa <- sum(x^2) + 1/tauBsq
ind0 <- which(y==0)
ind1 <- which(y==1)
for( i in 1:K )
{
  if( i %% 1000 == 0 ) print(i)
  ## sample beta 
  mu <- sum(z[i,]*x)/kappa
  beta <- c(beta,rnorm(1,mean=mu,sd=sqrt(1/kappa)))
  ## sample c
  a <- max(z[i,ind0])
  b <- min(z[i,ind1])
  c <- c(c,rtnorm(1,mean=0,sd=sqrt(tauCsq),lower=a,upper=b))
  ## sample z
  z.prop <- NULL
  for( j in 1:n)
    {
      m <- beta[i+1]*x[j]
      if(y[j]==1) z.prop <- c(z.prop,rtnorm(1,mean=m,sd=1,lower=c[i+1]))
      else z.prop <- c(z.prop,rtnorm(1,mean=m,sd=1,upper=c[i+1]))
    }
  z <- rbind(z,z.prop)
}
## Autocorrelation
pdf(file="set2014_3problem2c.pdf",height=4,width=12,points=12)
par(mfrow=c(1,3))
acf(beta[-1])
acf(c[-1])
k <- sample(1:n,1) ## 11
acf(z[-1,k])
dev.off()
## 95% confidence interval for beta
beta.sort <- sort(beta[-1])
print(c(beta.sort[751],beta.sort[29250])) ## 0.10 0.66 
prob <- length(which(beta[-1]>0)) 
print(prob/K) ## 0.999
            
