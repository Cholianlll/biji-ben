# STAT3015/STAT7030 GLMs
# R command file for Tutorial 10


# Question 1

jau <- read.table("austen.txt", header = TRUE)
jau
jau$SAND <- as.numeric(jau$BOOK == "SanditonII")

# (a)
# test the significance of the interaction term
# use the subset argument to restrict the data to Jane Austen's books only.
glm.a1 <- glm(COUNT ~ BOOK*WORD, data = jau, family = poisson, 
             subset = (SAND == 0))
anova(glm.a1, test = "Chisq")
# alternatively, we can create another model without the interaction term
# and conduct a nested model test. It's conventional to list the models
# from smallest to largest when use anova() command for nested model test.
glm.a2 <- glm(COUNT ~ BOOK + WORD, data = jau, family = poisson, 
              subset = (SAND == 0))
anova(glm.a2, glm.a1, test = "Chisq")

# (b)
# fit the suggested model
glm.b1 <- glm(COUNT ~ BOOK + WORD + WORD:SAND, family = poisson, data = jau)
anova(glm.b1, test = "Chisq")
# investigate the source of difference
First <- as.numeric(jau$BOOK == "Sense&Sensibility")
Second <- as.numeric(jau$BOOK == "Emma")
glm.b2 <- glm(COUNT ~ First + Second + SAND + WORD + WORD:SAND, 
              family = poisson, data = jau)
summary(glm.b2)

# (c) to address the question specific to the Sanditon volumes:
# The subset command here resticts books to either SanditonI OR SanditonII
# In subset functions, "|" means "or" and "&" means "and".
glm.c <- glm(COUNT ~ BOOK*WORD, data = jau, family = poisson,
             subset = ((BOOK == "SanditonI")|(BOOK == "SanditonII")))
summary(glm.c)
anova(glm.c, test = "Chisq")

# Question 2
# (a) test the significance of Temperature on Storms
eln <- read.table("elnino.txt", header = TRUE)
eglm1 <- glm(storms ~ west.africa + temperature, data = eln, 
             family = poisson)
anova(eglm1, test = "Chisq")
summary(eglm1)
# confidence interval of the expected drop in the mean number of storms if the temperature
# shifts from neutral to warm, or from cold to neutral
1-exp(coef(eglm1)[3]+c(1,0,-1)*1.96*sqrt(diag(vcov(eglm1))[3]))
# (b) test the significance of Temperature on Hurriances
eglm2 <- glm(hurricanes ~ west.africa + temperature, data = eln, 
             family = poisson)
anova(eglm2, test = "Chisq")
summary(eglm2)
# confidence interval of the expected drop in the mean number of hurricanes if the temperature
# shifts from neutral to warm, or from cold to neutral
1-exp(coef(eglm2)[3]+c(1,0,-1)*1.96*sqrt(diag(vcov(eglm2))[3]))
# make a plot
par(mar=c(2, 4, 0, 2), mfrow=c(1, 2), pty="s") # margins with order bottom, left, top, right
plot(factor(eln$temp), eln$storms, xlab="Temp", ylab="Storms")
plot(factor(eln$temp), eln$hurricanes, xlab="Temp", ylab="Hurricanes")

# Question 3
# (a)
mw <- c(4.0, 20.2, 28.2, 28.2, 39.9, 39.9, 83.8, 83.8, 131.3, 131.3)
mmhr <- c(3.51, 3.14, 3.03, 2.83, 2.71, 2.76, 2.27, 2.17, 1.88, 1.85)
xs <- cbind(mw, sqrt(mw), log(mw), mw^(1/3), mw^(2/3))
# Assign names to columns of xs
dimnames(xs)[[2]] <- c("mw", "sqrt(mw)", "log(mw)", "mw^1/3", "mw^2/3")
ys <- cbind(mmhr, log(mmhr), 1/mmhr)
# assign names to columns of ys
dimnames(ys)[[2]] <- c("mmhr", "log(mmhr)", "1/mmhr")
par(mfrow = c(3, 5), mar = c(4, 4, 1, 1))
for(i in 1:3) 
{
  for(j in 1:5) 
    {
    plot(xs[,j],ys[,i],xlab = dimnames(xs)[[2]][j],
           ylab = dimnames(ys)[[2]][i])
    abline(lsfit(xs[,j],ys[,i])$coef)
    cr <- cor(xs[,j],ys[,i])
    xt <- min(xs[,j])
    yt <- ifelse(i == 3,max(ys[,i]) - 0.02,min(ys[,i]) + 0.04)
    text(xt,yt,paste("r", "=", as.character(round(cr,4))), adj = 0)
    }
}

# (b)
fng.lm <- lm(1/mmhr ~ mw)
summary(fng.lm)

par(mfrow=c(1, 2), pty="s")
plot(fitted(fng.lm), residuals(fng.lm))
plot(fitted(fng.lm), abs(residuals(fng.lm)))

library(faraway)
fng.inf <- influence(fng.lm)
par(mfrow=c(2, 2))
halfnorm(fng.inf$hat, main="Leverages")
barplot(fng.inf$hat, main="Leverages from Normal Model")
halfnorm(cooks.distance(fng.lm), main="Cooks distance")
qqnorm(residuals(fng.lm))

-sort(-fng.inf$hat)[1:3]

# (c)
fng.glm <- glm(mmhr ~ mw, family = Gamma)
summary(fng.glm)$coef

par(mfrow=c(2, 2))
plot(residuals(fng.glm)~predict(fng.glm, type="link"),
     xlab=expression(hat(eta)), ylab="Deviance residuals",
     main="Gamma model")
plot(abs(residuals(fng.glm))~predict(fng.glm, type="link"),
     xlab=expression(hat(eta)), ylab="Abs|Deviance residuals|",
     main="Gamma model")
fng.inf.glm <- influence(fng.glm)
barplot(fng.inf.glm$hat, main="Leverages from Gamma Model")
halfnorm(cooks.distance(fng.glm), main="Cooks distance - Gamma model")

-sort(-fng.inf.glm$hat)[1:3]

# (d)
fng.sch <- lm(mmhr ~ sqrt(mw))
mw <- 222
prd1 <- predict(fng.lm,newdata=list(mw=222),se.fit=T)
prd2 <- predict(fng.glm,newdata=list(mw=222),se.fit=T)
prd3 <- predict(fng.sch,newdata=list(mw=222),se.fit=T)
fts <- c(prd1$fit,prd2$fit,prd3$fit)
sds <- c(prd1$se.fit,prd2$se.fit,prd3$se.fit)
ests <- c(1/prd1$fit,1/prd2$fit,prd3$fit)
lowerf <- fts - qt(0.975,8)*sds
upperf <- fts + qt(0.975,8)*sds
lower <- rep(0, 3)
lower[1:2] <- 1/upperf[1:2]
lower[3] <- lowerf[3]
upper <- rep(0, 3)
upper[1:2] <- 1/lowerf[1:2]
upper[3] <- upperf[3]
cbind(lower, ests, upper)










