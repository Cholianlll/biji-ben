#Last Updated: 31/07/2017
#Part I
rm(list=ls())
beta0=2;beta1=1

n=100
R=1000       	
hatbeta0=rep(0,R)               #space to store the different realisations of estimations
hatbeta1=rep(0,R)
set.seed(1)
for(r in 1:R) {
  X=1:n                         #our X values
  errors=rnorm(n)     	        #generate a set of errors, which implies sigma=1
  Y=beta0+beta1*X+errors        #generate a set of response values     
  SLRfit=lm(Y~X)                 #fit the SLR    
  hatbeta0[r]=SLRfit$coef[1]    #get the estimation
  hatbeta1[r]=SLRfit$coef[2]
} 

#set.seed()
set.seed(1)
head(rnorm(n))
set.seed(2)
head(rnorm(n))
set.seed(1)
head(rnorm(n))

hist(hatbeta0)
hist(hatbeta1)

mean(hatbeta0)
mean(hatbeta1)

sd(hatbeta1)
sigma=1
sigma*sqrt(1/((n-1)*(sd(X))^2))


#Part II
beta0=2
beta1=0
set.seed(1)
n=100
X=1:n                         #our X values
errors=rnorm(n)     	        #generate a set of errors, which implies sigma=1
Y=beta0+beta1*X+errors        #generate a set of response values     
SLRfit=lm(Y~X)                #fit the SLR    
SLRfit$coef                   #get the estimation


#Part III
rm(list=ls())
beta0=2
beta1=0.5
set.seed(1)
n=5
X=1:n                         #our X values
errors=rnorm(n)     	        #generate a set of errors, which implies sigma=1
Y=beta0+beta1*X+errors        #generate a set of response values     
SLRfit=lm(Y~X)                #fit the SLR    
summary(SLRfit)               #get the estimation and hypothesis testing



#Part IV
rm(list=ls())
#reading in the data
oldfaith=read.table("oldfaithful.csv",header=T,sep=",") 
#fitting the SLR
oldfaith.reg=lm(oldfaith$INTERVAL~oldfaith$DURATION)  
#Plotting the data
plot(oldfaith$DUR,oldfaith$INT,xlab="Duration (mins)", ylab="Interval (mins)", main="Old Faithful SLR")
#adding the fitted SLR
abline(oldfaith.reg)

#information about the SLR
summary(oldfaith.reg)


#CI for mean of response
Y=oldfaith$INTERVAL
X=oldfaith$DURATION
fit<-lm(Y~X)
x0=data.frame(X=3)
predict(fit,x0,interval='confidence',level=0.95)

#PI for future response
Xnew=data.frame(X=3)
predict(fit,Xnew,interval='prediction',level=0.95)
