<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Rui Qiu, Qian Li</string>
	<key>comments</key>
	<string></string>
	<key>isUsingConstrainedLayout</key>
	<false/>
	<key>keywords</key>
	<string>MAT, 237</string>
	<key>mindMap</key>
	<dict>
		<key>associations</key>
		<array/>
		<key>color</key>
		<string>{1.000, 0.961, 0.863, 1.000}</string>
		<key>mainNodes</key>
		<array>
			<dict>
				<key>contentAlignment</key>
				<integer>1</integer>
				<key>fillColor</key>
				<string>{1.000, 1.000, 1.000, 1.000}</string>
				<key>isDecreasingBranchThickness</key>
				<true/>
				<key>isDrawingFill</key>
				<true/>
				<key>isLeftAligned</key>
				<false/>
				<key>location</key>
				<string>{0, 0}</string>
				<key>nodeID</key>
				<string>22FC13FC-36F2-4316-95BB-41F95E6DC031</string>
				<key>strokeColor</key>
				<string>{0.400, 0.200, 0.000, 1.000}</string>
				<key>strokeStyle</key>
				<integer>0</integer>
				<key>strokeWidth</key>
				<real>2</real>
				<key>subnodes</key>
				<array>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-482.72418516667881, -1090.9960199666825}</string>
						<key>nodeID</key>
						<string>1F74290A-9288-4E19-A7C5-EF374D988937</string>
						<key>strokeColor</key>
						<string>{1.000, 0.400, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-760.92729365617095, -1326.0175901700936}</string>
								<key>nodeID</key>
								<string>6470960F-4D0D-4B42-BF8B-0E9F06610CBF</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-872.92729365617095, -1326.0175901700936}</string>
										<key>nodeID</key>
										<string>5825E20B-4953-4E6A-8CE5-07BD0AC8A85A</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1144.9272936561711, -1326.0175901700936}</string>
												<key>nodeID</key>
												<string>6FAAFA0A-C889-4F18-9519-D8D8F407106C</string>
												<key>strokeColor</key>
												<string>{1.000, 0.400, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;use f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a-&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;t&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;), find the minimum of f&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 use f(
\f1\b \cf2 a-
\f0\b0 \cf2 t
\f1\b \cf2 b
\f0\b0 \cf2 ), find the minimum of f}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.1 Cauchy&amp;apos;s Inequality&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.1 Cauchy's Inequality}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-752.32336757039093, -1268.6215162558733}</string>
								<key>nodeID</key>
								<string>A35FAA03-9388-4792-9C95-2469D9D7E512</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-864.32336757039093, -1268.6215162558733}</string>
										<key>nodeID</key>
										<string>CE227353-F345-4E0B-865E-D073C4E30680</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1126.3233675703909, -1268.6215162558733}</string>
												<key>nodeID</key>
												<string>ECAD751D-100F-4AF7-805B-BA288F5F48B6</string>
												<key>strokeColor</key>
												<string>{1.000, 0.400, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;+&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|^2 and Cauchy&amp;apos;s Inequality&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 |
\f1\b \cf2 a
\f0\b0 \cf2 +
\f1\b \cf2 b
\f0\b0 \cf2 |^2 and Cauchy's Inequality}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.2 Triangle Inequality&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.2 Triangle Inequality}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-671.12533061328099, -1209.6215162558733}</string>
								<key>nodeID</key>
								<string>46E51076-D011-4293-A1E0-BECCED31F6DC</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1155.0964010932382, -1227.4432652832211}</string>
										<key>nodeID</key>
										<string>C2795749-B3C7-4474-8042-8B447BABD0DC</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>384</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;Let M be the largest number of |x1|, |x2|,…, |xn|			max(|x1|, |x2|,…, |xn|)&amp;lt;=|&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|&amp;lt;=sqrt(n)(max(|x1|, |x2|,…, |xn|))&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>0</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 Let M be the largest number of |x1|, |x2|,\'85, |xn|			max(|x1|, |x2|,\'85, |xn|)&lt;=|
\f1\b \cf2 x
\f0\b0 \cf2 |&lt;=sqrt(n)(max(|x1|, |x2|,\'85, |xn|))}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.3&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.3}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-908.89784801282156, -1155.4332945132128}</string>
								<key>nodeID</key>
								<string>6E67BB8F-7129-4785-9281-4659B70E80F1</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>attachment</key>
										<dict>
											<key>fileName</key>
											<string>3EE129D8-64E7-4145-AD68-B33CEA41C99F.tiff</string>
											<key>size</key>
											<string>{95.976957735371244, 13.454713701220269}</string>
											<key>type</key>
											<integer>2</integer>
										</dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1120.6643928391732, -1170.1328973700315}</string>
										<key>nodeID</key>
										<string>A490C984-DF10-40CC-9B28-3FF1EEED8E19</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>114</integer>
											<key>htmlText</key>
											<string></string>
											<key>shrinkToFitContent</key>
											<integer>0</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl}
{\colortbl;\red255\green255\blue255;}
}</string>
										</dict>
									</dict>
									<dict>
										<key>attachment</key>
										<dict>
											<key>fileName</key>
											<string>38CF671C-10BC-483B-BD06-D9CB095F7D89.tiff</string>
											<key>size</key>
											<string>{43.90052521178427, 15.759162896537942}</string>
											<key>type</key>
											<integer>2</integer>
										</dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1288.5722371908055, -1130.2557408652447}</string>
										<key>nodeID</key>
										<string>CA40A940-815A-46E5-ACAB-4E468A680F94</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;is the area of the parallelogram generated by &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 is the area of the parallelogram generated by 
\f1\b \cf2 a 
\f0\b0 \cf2 and 
\f1\b \cf2 b}</string>
										</dict>
									</dict>
									<dict>
										<key>attachment</key>
										<dict>
											<key>fileName</key>
											<string>B7863E36-498C-44C1-A18D-FEAC0E24D86A.pdf</string>
											<key>size</key>
											<string>{159.21519323837401, 19.901899154796752}</string>
											<key>type</key>
											<integer>2</integer>
										</dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1161.1384230740377, -1068.6242121514192}</string>
										<key>nodeID</key>
										<string>C2EB5E92-403F-4762-8671-74E159239126</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string></string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl}
{\colortbl;\red255\green255\blue255;}
}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;review of dot product, projection (and orthogonality), review of cross product, the determinant notation, properties of cross product, in particular the area of the parallelogram.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 review of dot product, projection (and orthogonality), review of cross product, the determinant notation, properties of cross product, in particular the area of the parallelogram.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.1 Euclidean Spaces and Vectors&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.1 Euclidean Spaces and Vectors}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-589.39420193180024, -939.1745859372503}</string>
						<key>nodeID</key>
						<string>8CBBC67F-4160-4BA4-9155-9ED93C6906D3</string>
						<key>strokeColor</key>
						<string>{1.000, 0.800, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-972.55484993044774, -952.14882857908708}</string>
								<key>nodeID</key>
								<string>5C65A9C9-478F-441D-8FF6-74A6D21CB0E5</string>
								<key>strokeColor</key>
								<string>{1.000, 0.800, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1334.554849930448, -952.14882857908708}</string>
										<key>nodeID</key>
										<string>5D284AEE-D983-41BC-AD18-F4593880BA83</string>
										<key>strokeColor</key>
										<string>{1.000, 0.800, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;The only proof is 1.4, with 4 components: (a)=&amp;gt;, &amp;lt;=(a), (b)=&amp;gt;, &amp;lt;=(b). We should state every point of S is either an interior point or a boundary point.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 The only proof is 1.4, with 4 components: (a)=&gt;, &lt;=(a), (b)=&gt;, &lt;=(b). We should state every point of S is either an interior point or a boundary point.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;definitions: ball, bounded, complement, interior, boundary, open, closed, closure, neighbourhood.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 definitions: ball, bounded, complement, interior, boundary, open, closed, closure, neighbourhood.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.2 Subsets of Euclidean Space&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.2 Subsets of Euclidean Space}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-603.25708251163485, -723.19302514513015}</string>
						<key>nodeID</key>
						<string>2ECC5DAB-8166-4306-8C40-810934EFCE01</string>
						<key>strokeColor</key>
						<string>{0.600, 0.600, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-981.01900872720967, -748.63185842409075}</string>
								<key>nodeID</key>
								<string>55A57795-A63E-4CCF-9209-EF93C7A41690</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1244.8487897681282, -826.12120154684555}</string>
										<key>nodeID</key>
										<string>0732FDC7-30BC-4269-9EFE-4903EB8D6E91</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1590.8487897681289, -826.12120154684555}</string>
												<key>nodeID</key>
												<string>EBAFEBC1-232A-4A60-8BB4-FA8358F4148B</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.3 For all epsilon&amp;gt;0, there exists an delta&amp;gt;0 s.t. 0&amp;lt;|x-a|&amp;lt;delta implies |f(x)-L|&amp;lt;epsilon&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.3 For all epsilon&gt;0, there exists an delta&gt;0 s.t. 0&lt;|x-a|&lt;delta implies |f(x)-L|&lt;epsilon}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof of 1.7 using 1.6 and 1.3&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof of 1.7 using 1.6 and 1.3}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1339.7089774473416, -738.55484831465003}</string>
										<key>nodeID</key>
										<string>596952CC-F204-482D-8790-3FC0B05A821B</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1616.7089774473416, -738.55484831465003}</string>
												<key>nodeID</key>
												<string>573ECC32-AF0B-4171-B9A7-033EAC3AD9F5</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;just change 1.3 to vectors, L to f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 just change 1.3 to vectors, L to f(
\f1\b \cf2 a
\f0\b0 \cf2 )}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;similarly the proof of the statement in the middle of page 14 using 1.8 and 1.3&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 similarly the proof of the statement in the middle of page 14 using 1.8 and 1.3}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1513.2075137592362, -688.53703370947403}</string>
										<key>nodeID</key>
										<string>1A07351F-198B-4058-AC4C-86729FDB8079</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1709.2075137592362, -688.53703370947403}</string>
												<key>nodeID</key>
												<string>D69591BE-3D12-4AC0-ADD9-2291393F6E38</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof addition of 1.10&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof addition of 1.10}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.9 - 1.12: The sum, product, or difference of two continuous functions is continuous; the quotient of two continuous functions is continuous on the set where the denominator is nonzero.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.9 - 1.12: The sum, product, or difference of two continuous functions is continuous; the quotient of two continuous functions is continuous on the set where the denominator is nonzero.}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1379.3732663252399, -598.02709801824381}</string>
										<key>nodeID</key>
										<string>2E17B555-5682-4291-852F-B79FA33F6E21</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1738.0646645501004, -596.87279713067437}</string>
												<key>nodeID</key>
												<string>93C7A1CE-AF09-4B20-93EC-569577BE5BC2</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;show that any point &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S is an interior point of S&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 show that any point 
\f1\b \cf2 a
\f0\b0 \cf2  in S is an interior point of S}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.13 Suppose &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is from R^n to R^k, then is continuous and U is a subset of R^k, let S be a set of &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; from R^n, such that &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(x)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; belongs to U, then S is open if U is open.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.13 Suppose 
\f1\b \cf2 f
\f0\b0 \cf2  is from R^n to R^k, then is continuous and U is a subset of R^k, let S be a set of 
\f1\b \cf2 x
\f0\b0 \cf2  from R^n, such that 
\f1\b \cf2 f(x)
\f0\b0 \cf2  belongs to U, then S is open if U is open.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;all of sections 1.3 in details (special emphasis on the sequence of theorems: 1.9-1.12 as a tool for proving/illustrating continuity of a function). also the use of inequality in proving continuity and limit.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 all of sections 1.3 in details (special emphasis on the sequence of theorems: 1.9-1.12 as a tool for proving/illustrating continuity of a function). also the use of inequality in proving continuity and limit.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.3 Limits and Continuity&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.3 Limits and Continuity}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-575.42358254304679, -387.70261233084409}</string>
						<key>nodeID</key>
						<string>B9EC3306-6973-4BDD-93C3-D7B9B4E9FF45</string>
						<key>strokeColor</key>
						<string>{0.600, 0.800, 0.800, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-869.72497614269275, -578.79351707774583}</string>
								<key>nodeID</key>
								<string>0153E668-87CA-4FD1-8055-87072DEACF1E</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;MAT137 knowledge of sequences&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 MAT137 knowledge of sequences}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-1037.9685297475942, -390.90373659014665}</string>
								<key>nodeID</key>
								<string>320982A8-12E6-4B0B-A180-98EBBCAD9A3B</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1405.4244050364982, -401.95977477890085}</string>
										<key>nodeID</key>
										<string>2E7C00DD-1F56-424A-883F-6D1AFCF0046C</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (two blocks: if and only if): 1. state what a sequence converges to some point means, and find the same point in the ball and the set; 2. construct a sequence by the property of closure (1/k is the usually the easiest one to think of)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (two blocks: if and only if): 1. state what a sequence converges to some point means, and find the same point in the ball and the set; 2. construct a sequence by the property of closure (1/k is the usually the easiest one to think of)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.14 &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;belongs to R^n, S belongs to R^n, then &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;belongs to the closure of S iff there is a sequence of points in S that converges to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.14 
\f1\b \cf2 x 
\f0\b0 \cf2 belongs to R^n, S belongs to R^n, then 
\f1\b \cf2 x 
\f0\b0 \cf2 belongs to the closure of S iff there is a sequence of points in S that converges to 
\f1\b \cf2 x
\f0\b0 \cf2 .}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-997.4088720547046, -319.27992256065329}</string>
								<key>nodeID</key>
								<string>A682DA45-5613-477E-9B7B-53979F2FDE86</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1392.7741452380778, -294.10420814641896}</string>
										<key>nodeID</key>
										<string>B9E40E10-E10E-4AD6-B26F-99F65AF43245</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1. suppose &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is continuous at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;xk &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;is close to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1. suppose 
\f1\b \cf2 f
\f0\b0 \cf2  is continuous at 
\f1\b \cf2 a 
\f0\b0 \cf2 and 
\f1\b \cf2 xk 
\f0\b0 \cf2 is close to 
\f1\b \cf2 a
\f0\b0 \cf2 .}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1421.8262629683875, -246.68745120435085}</string>
										<key>nodeID</key>
										<string>E300779A-4B34-4B8F-B37D-2E537D5EA79C</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2. suppose &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is not continuous at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;. take delta = 1, 1/2, 1/3, … then make a contradiction.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2. suppose 
\f1\b \cf2 f
\f0\b0 \cf2  is not continuous at 
\f1\b \cf2 a
\f0\b0 \cf2 . take delta = 1, 1/2, 1/3, \'85 then make a contradiction.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.15 S in R^n, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; belongs to S, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;: from S to R^m, the following are equivalent: (a) f is continuous at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, (b) For any {&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;xk&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;} sequence in S that converges to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, {&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(xk)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;} converges to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(a)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.15 S in R^n, 
\f1\b \cf2 a
\f0\b0 \cf2  belongs to S, 
\f1\b \cf2 f
\f0\b0 \cf2 : from S to R^m, the following are equivalent: (a) f is continuous at 
\f1\b \cf2 a
\f0\b0 \cf2 , (b) For any \{
\f1\b \cf2 xk
\f0\b0 \cf2 \} sequence in S that converges to 
\f1\b \cf2 a
\f0\b0 \cf2 , \{
\f1\b \cf2 f(xk)
\f0\b0 \cf2 \} converges to 
\f1\b \cf2 f(a)
\f0\b0 \cf2 .}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-793.84453290266094, -231.68828072263045}</string>
								<key>nodeID</key>
								<string>867DDE44-791C-4F8D-BD19-C84B028CC312</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;skip exercise 6, 7&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 skip exercise 6, 7}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-947.81474360985044, -182.47682037242635}</string>
								<key>nodeID</key>
								<string>AFB831D4-DABC-4B6F-B7DE-B8F9A48412EF</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1309.8147436098504, -182.47682037242635}</string>
										<key>nodeID</key>
										<string>A786FB7E-21DC-47E7-9414-2A298F784C4A</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;for vector converges, each components have to be convergent.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 for vector converges, each components have to be convergent.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof of the last paragraph of page 21 (before example 4)&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof of the last paragraph of page 21 (before example 4)}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-1056.9459571531449, -478.83155475648186}</string>
								<key>nodeID</key>
								<string>81C9643E-BD47-445F-ADC9-9E39860F1342</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;a sequence {xk} in R^n is said to converge to the limit &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;L&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; if for every epsilon&amp;gt;0 there is an integer K s.t. |xk-L|&amp;lt;epsilon whenever k&amp;gt;K; ow. diverges.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 a sequence \{xk\} in R^n is said to converge to the limit 
\f1\b \cf2 L
\f0\b0 \cf2  if for every epsilon&gt;0 there is an integer K s.t. |xk-L|&lt;epsilon whenever k&gt;K; ow. diverges.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.4 Sequences&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.4 Sequences}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-517.61503787172376, -53.886894191891543}</string>
						<key>nodeID</key>
						<string>054628C4-DEA0-4756-AFFB-ED18FB53697F</string>
						<key>strokeColor</key>
						<string>{0.000, 0.600, 0.600, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-670.51829825793186, -101.39359009593477}</string>
								<key>nodeID</key>
								<string>573084F2-1D72-40D1-91C2-E12ECEB515E8</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1027.5182982579317, -101.39359009593477}</string>
										<key>nodeID</key>
										<string>05EC396C-126A-48EF-A014-2ADBE8FDC484</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;the completeness axiom: S be a nonempty set of real. S has an upper bound, then S has a lub, called the supremum of S. if has a lower bound, then S has a glb.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 the completeness axiom: S be a nonempty set of real. S has an upper bound, then S has a lub, called the supremum of S. if has a lower bound, then S has a glb.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;review of lub&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 review of lub}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-690.94307814879642, -47.046865548950791}</string>
								<key>nodeID</key>
								<string>1E8D2A4D-75AA-4BA7-A052-D4FB4E271B0A</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;skip exercise 9&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 skip exercise 9}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-893.67505726423599, 20.060294591090496}</string>
								<key>nodeID</key>
								<string>EED2AC93-F7E1-4F90-B40C-7FF1114DBB7C</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1254.5207563766662, 20.060294591090496}</string>
										<key>nodeID</key>
										<string>2A6F8B14-2F31-4539-B836-457CEE78DB0E</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: two properties of lub, firstly xk not larger than l, then l is the lub, for all epsilon&amp;gt;0 there is a K s.t. xK&amp;gt;l-epsilon. Then increasing… xk converges to l.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: two properties of lub, firstly xk not larger than l, then l is the lub, for all epsilon&gt;0 there is a K s.t. xK&gt;l-epsilon. Then increasing\'85 xk converges to l.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.16 The monotone sequence thm: every bounded monotone sequence in R is convergent. more precisely, the limit of an increasing sequence is the sup of its set of values.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.16 The monotone sequence thm: every bounded monotone sequence in R is convergent. more precisely, the limit of an increasing sequence is the sup of its set of values.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-883.77525029770038, 97.718486281573178}</string>
								<key>nodeID</key>
								<string>794203F7-04EE-4406-BC7A-C6B6685642C3</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1210.6209494101311, 123.113105808108}</string>
										<key>nodeID</key>
										<string>A0B465AC-A8ED-435D-9BEF-59AFF8EFFA3A</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (two blocks: existence and uniqueness)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (two blocks: existence and uniqueness)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.17 The Nested Interval Thm: closed bounded intervals in R, (a) I1 contains I2 contains I3… (b) the length bk-ak tends to 0 as k tends to infinity, then there is exactly one point in all of the intervals Ik.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.17 The Nested Interval Thm: closed bounded intervals in R, (a) I1 contains I2 contains I3\'85 (b) the length bk-ak tends to 0 as k tends to infinity, then there is exactly one point in all of the intervals Ik.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-865.38250083858554, 196.67713653799296}</string>
								<key>nodeID</key>
								<string>F6FE379E-6E3E-4795-9415-2292E7E05F3E</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1349.9607981430372, 205.78529197897342}</string>
										<key>nodeID</key>
										<string>B19A06A7-9C76-4D8D-9F22-132867A691BE</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1702.9607981430372, 205.78529197897342}</string>
												<key>nodeID</key>
												<string>480238E4-56E0-4BE5-9E0B-7F39C359BC38</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.17 is a base for proving this, take then take half, half, half, finally, to infinitely many halves, then the seq converges since according to 1.17 the length between tends to 0.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.17 is a base for proving this, take then take half, half, half, finally, to infinitely many halves, then the seq converges since according to 1.17 the length between tends to 0.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (3 ideas: selection of the intervals, selection of the sequence, and proving that the sequence converges.)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (3 ideas: selection of the intervals, selection of the sequence, and proving that the sequence converges.)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.18 every bounded seq in R has a convergent subsequence&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.18 every bounded seq in R has a convergent subsequence}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-879.12548853158739, 264.38399206102918}</string>
								<key>nodeID</key>
								<string>63609B9B-74FC-4607-A08C-3E3418DCC558</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1129.7125317175371, 295.49149918346598}</string>
										<key>nodeID</key>
										<string>08068B2C-2436-4E05-8FE9-27B2484E5857</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (for n = 2, 3)  sub-sub&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (for n = 2, 3)  sub-sub}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.19 every bounded seq in R^n has a convergent subsequence&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.19 every bounded seq in R^n has a convergent subsequence}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-814.43965486273794, 371.40922156691045}</string>
								<key>nodeID</key>
								<string>B4846739-0932-4A6D-A37E-DEAD0951FEB0</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1192.8478616200287, 362.7700008615052}</string>
										<key>nodeID</key>
										<string>EDA37BFA-5D34-4EC6-B074-D28197B2E21B</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1547.8478616200287, 362.7700008615052}</string>
												<key>nodeID</key>
												<string>C64E8545-FE34-4501-8AE4-E2AD5E0E8579</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;convergent implies Cauchy: triangle inequality, def of Cauchy&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 convergent implies Cauchy: triangle inequality, def of Cauchy}</string>
												</dict>
											</dict>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1554.8478616200287, 424.2700008615052}</string>
												<key>nodeID</key>
												<string>8D676323-028F-4428-9D0A-3CA009756B00</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;Cauchy implies convergent: take epsilon = 1, see K, where |&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;xk&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|&amp;lt;|&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;xK&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|+1 for all k&amp;gt;K, then bounded. by 1.18, subseq converges to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;l&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, then Cauchy, converges to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;l&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;. there is a J…&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 Cauchy implies convergent: take epsilon = 1, see K, where |
\f1\b \cf2 xk
\f0\b0 \cf2 |&lt;|
\f1\b \cf2 xK
\f0\b0 \cf2 |+1 for all k&gt;K, then bounded. by 1.18, subseq converges to 
\f1\b \cf2 l
\f0\b0 \cf2 , then Cauchy, converges to 
\f1\b \cf2 l
\f0\b0 \cf2 . there is a J\'85}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (3 blocks: convergent implies Cauchy, Cauchy is bounded, Cauchy + subsequence converge imply the entire sequence converge.)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (3 blocks: convergent implies Cauchy, Cauchy is bounded, Cauchy + subsequence converge imply the entire sequence converge.)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.20 a seq is convergent iff it is Cauchy&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.20 a seq is convergent iff it is Cauchy}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.5 Completeness&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.5 Completeness}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-427.57721156559194, 471.86253180856045}</string>
						<key>nodeID</key>
						<string>338C8498-6655-4017-8A18-29CFE68E189E</string>
						<key>strokeColor</key>
						<string>{0.400, 0.200, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-732.57721156559194, 471.86253180856045}</string>
								<key>nodeID</key>
								<string>6075E010-155B-4CA6-9CB5-B557772DC60E</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;up to page 32, skip Heine-Borel thm 1.24&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 up to page 32, skip Heine-Borel thm 1.24}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-827.28634440567328, 514.72486432179392}</string>
								<key>nodeID</key>
								<string>86C19D17-B16D-469E-B253-F0FACACE9290</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1212.9435094086264, 507.86409963405265}</string>
										<key>nodeID</key>
										<string>A5AB55EF-11F3-48CE-A572-AE77297D83BE</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1546.9435094086264, 507.86409963405265}</string>
												<key>nodeID</key>
												<string>AD4665CB-ACF9-4887-AF9C-4E28DC8AC95E</string>
												<key>strokeColor</key>
												<string>{0.400, 0.200, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;(a) to (b): compactness implies closed and bounded, implies subsequence converges to a point in S.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 (a) to (b): compactness implies closed and bounded, implies subsequence converges to a point in S.}</string>
												</dict>
											</dict>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1574.9435094086264, 584.36409963405265}</string>
												<key>nodeID</key>
												<string>292BEDAC-7464-4054-9F6F-58D5C25EFA19</string>
												<key>strokeColor</key>
												<string>{0.400, 0.200, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;(b) to (a): suppose not compact, then converges to infinity, if not closed some subsequence converges to in S closure but not in S.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 (b) to (a): suppose not compact, then converges to infinity, if not closed some subsequence converges to in S closure but not in S.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (5 blocks: (a)=&amp;gt;(b), S is not bounded then a sequence in S tends to infinity, any subsequence also tends to infinity, then no converging subsequence, not closed then exists a subsequence which does not converge in S).&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (5 blocks: (a)=&gt;(b), S is not bounded then a sequence in S tends to infinity, any subsequence also tends to infinity, then no converging subsequence, not closed then exists a subsequence which does not converge in S).}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.21 Bolzano-Weierstrass Thm: if S is a subset of R^n, the following are equivalent: (a) S is compact, (b) every seq of points in S has a convergent subsequence whose limit lies in S.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.21 Bolzano-Weierstrass Thm: if S is a subset of R^n, the following are equivalent: (a) S is compact, (b) every seq of points in S has a convergent subsequence whose limit lies in S.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-856.94348052798784, 646.69832355784536}</string>
								<key>nodeID</key>
								<string>96682800-8400-4954-8D59-6F2C9EC4D027</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1225.561828177214, 681.23124968440072}</string>
										<key>nodeID</key>
										<string>31C8E74D-4162-476E-A629-64973E54561E</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1573.561828177214, 681.23124968440072}</string>
												<key>nodeID</key>
												<string>73229D05-0401-400D-B0C6-54A6C4A8E91E</string>
												<key>strokeColor</key>
												<string>{0.400, 0.200, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;by 1.22, conti f maps a compact to another compact set, then S is closed and bounded, then there exists lub/glb.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 by 1.22, conti f maps a compact to another compact set, then S is closed and bounded, then there exists lub/glb.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof (3 blocks: inf and sup exist, they belong to S, there exist points &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof (3 blocks: inf and sup exist, they belong to S, there exist points 
\f1\b \cf2 a 
\f0\b0 \cf2 and 
\f1\b \cf2 b
\f0\b0 \cf2  in S.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.23 corollary (the extreme value thm): S in R^n compact and f from S to R^n conti. then f has an absolute min/max on S; exists &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a, b &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;s.t. f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&amp;lt;=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&amp;lt;=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) for all &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.23 corollary (the extreme value thm): S in R^n compact and f from S to R^n conti. then f has an absolute min/max on S; exists 
\f1\b \cf2 a, b 
\f0\b0 \cf2 s.t. f(
\f1\b \cf2 a
\f0\b0 \cf2 )&lt;=f(
\f1\b \cf2 x
\f0\b0 \cf2 )&lt;=f(
\f1\b \cf2 b
\f0\b0 \cf2 ) for all 
\f1\b \cf2 x
\f0\b0 \cf2  in S.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-874.55347590277313, 601.31976400178053}</string>
								<key>nodeID</key>
								<string>61E0F9CD-3382-4D84-91E8-1C8027761A17</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.22 continuous functions map compact sets to compact sets.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.22 continuous functions map compact sets to compact sets.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.6 Compactness&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.6 Compactness}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-378.19920967763198, 964.23763205744126}</string>
						<key>nodeID</key>
						<string>0A215D15-9CDB-488A-B1EB-2491D9FCEF49</string>
						<key>strokeColor</key>
						<string>{1.000, 0.400, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-866.13875233012539, 1003.7570810690422}</string>
								<key>nodeID</key>
								<string>92F08BBB-BC55-4CFB-AA66-FA49ACC865B3</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1240.8758712219137, 1037.1512717622663}</string>
										<key>nodeID</key>
										<string>8DCB2B60-6597-4A6C-AB01-CABA054385F8</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof continuous f maps connected to connected. connectedness means interval&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof continuous f maps connected to connected. connectedness means interval}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.27 Corollary (The Intermediate Value Theorem) f: S to R is continuous at every point of S and V belongs to S is connected. if &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a, b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in V and f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&amp;lt;t&amp;lt;f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) or f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&amp;lt;t&amp;lt;f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;), then there is a point &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;c&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in V such that f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;c )&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;=t&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.27 Corollary (The Intermediate Value Theorem) f: S to R is continuous at every point of S and V belongs to S is connected. if 
\f1\b \cf2 a, b
\f0\b0 \cf2  in V and f(
\f1\b \cf2 a
\f0\b0 \cf2 )&lt;t&lt;f(
\f1\b \cf2 b
\f0\b0 \cf2 ) or f(
\f1\b \cf2 b
\f0\b0 \cf2 )&lt;t&lt;f(
\f1\b \cf2 a
\f0\b0 \cf2 ), then there is a point 
\f1\b \cf2 c
\f0\b0 \cf2  in V such that f(
\f1\b \cf2 c )
\f0\b0 \cf2 =t}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-812.74343936897719, 1120.3764321060771}</string>
								<key>nodeID</key>
								<string>26F321EC-A449-4CDC-AED4-46466633DE89</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-937.90754722777922, 1113.008461289583}</string>
										<key>nodeID</key>
										<string>285F7672-6224-40B5-9054-FCB523D97C17</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<true/>
												<key>location</key>
												<string>{-1291.9075472277791, 1113.008461289583}</string>
												<key>nodeID</key>
												<string>49D1DB2B-A391-4E4E-8793-06D70A3E5DD6</string>
												<key>strokeColor</key>
												<string>{1.000, 0.400, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;suppose S is disconnected then it&amp;apos;s not path wise connected to contradict.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 suppose S is disconnected then it's not path wise connected to contradict.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1186.9075472277791, 1163.6751273204668}</string>
										<key>nodeID</key>
										<string>03780CA8-415E-4A15-88A8-CF6960C50B9E</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;pathwise-connected: for any &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a, b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S there is a continuous map&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt; f:&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; [0, 1] to R^n, s.t. &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(0) = &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(1) = b and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;t) belongs to S for all t between [0, 1]&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 pathwise-connected: for any 
\f1\b \cf2 a, b
\f0\b0 \cf2  in S there is a continuous map
\f1\b \cf2  f:
\f0\b0 \cf2  [0, 1] to R^n, s.t. 
\f1\b \cf2 f
\f0\b0 \cf2 (0) = 
\f1\b \cf2 a
\f0\b0 \cf2 , 
\f1\b \cf2 f
\f0\b0 \cf2 (1) = b and 
\f1\b \cf2 f(
\f0\b0 \cf2 t) belongs to S for all t between [0, 1]}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.28 if S in R^n is pathconnected then S is connected&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.28 if S in R^n is pathconnected then S is connected}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-749.56492200053833, 790.78648400929342}</string>
								<key>nodeID</key>
								<string>CAE9E53A-6135-40E9-B5E5-D7E0C6C5EB8C</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;S in R^n disconnected if it is the union of two nonempty subsets S1 and S2, neither of which intersects the closure of the other one.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 S in R^n disconnected if it is the union of two nonempty subsets S1 and S2, neither of which intersects the closure of the other one.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-682.83467041793654, 885.1091006467982}</string>
								<key>nodeID</key>
								<string>F22E781F-7E14-4CC2-98FE-C03F8133B343</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-915.83467041793665, 885.1091006467982}</string>
										<key>nodeID</key>
										<string>DD23E464-8342-4F39-B21A-12421042C65A</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.25 intervals are connected&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.25 intervals are connected}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-986.1088422124601, 941.63429192833064}</string>
										<key>nodeID</key>
										<string>65BB6C87-F3AA-4156-B747-062633A6D23E</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.26 continuous f maps connected set to connected set&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.26 continuous f maps connected set to connected set}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;know these two&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 know these two}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;1.7 Connectedness&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.7 Connectedness}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<true/>
						<key>location</key>
						<string>{-220.97958384193112, 1243.8069674595008}</string>
						<key>nodeID</key>
						<string>52198B5E-48E9-4B18-B35A-E891C944B2EC</string>
						<key>strokeColor</key>
						<string>{1.000, 0.800, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-719.82736180694201, 1259.6417373327754}</string>
								<key>nodeID</key>
								<string>7E5AEA37-AFC0-40D9-8233-9EF6636D68C2</string>
								<key>strokeColor</key>
								<string>{1.000, 0.800, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<true/>
										<key>location</key>
										<string>{-1081.827361806942, 1259.6417373327754}</string>
										<key>nodeID</key>
										<string>C840EDFC-34A5-4BC2-BBF1-8CA37DDF1BA6</string>
										<key>strokeColor</key>
										<string>{1.000, 0.800, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof: suppose not u.c. then derive a negation of the def of u.c., take delta = 1, 1/2, 1/3,… by BW construct a compact subsequence, then &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(xk) - f(yk) &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;tends to 0 which contradicts a part of the negation of def of u.c.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof: suppose not u.c. then derive a negation of the def of u.c., take delta = 1, 1/2, 1/3,\'85 by BW construct a compact subsequence, then 
\f1\b \cf2 f(xk) - f(yk) 
\f0\b0 \cf2 tends to 0 which contradicts a part of the negation of def of u.c.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1.33 S in R^n, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; from S to R^m, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is continuous at every point of S, If S is compact then &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is uniformly continuous&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1.33 S in R^n, 
\f1\b \cf2 f
\f0\b0 \cf2  from S to R^m, 
\f1\b \cf2 f
\f0\b0 \cf2  is continuous at every point of S, If S is compact then 
\f1\b \cf2 f
\f0\b0 \cf2  is uniformly continuous}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<true/>
								<key>location</key>
								<string>{-671.4170646644975, 1356.3621094091172}</string>
								<key>nodeID</key>
								<string>2BA44916-2790-490C-9C42-9363B9B34057</string>
								<key>strokeColor</key>
								<string>{1.000, 0.800, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;def: &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;from S to R^m is said to be &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u.c. &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;on S if for every epsilon &amp;gt; 0 there is a delta &amp;gt; 0 so that |&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f(x) - f(y)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;| &amp;lt; epsilon whenever &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x, y &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;belongs to S and |&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x - y&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;| &amp;lt; delta.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 def: 
\f1\b \cf2 f 
\f0\b0 \cf2 from S to R^m is said to be 
\f1\b \cf2 u.c. 
\f0\b0 \cf2 on S if for every epsilon &gt; 0 there is a delta &gt; 0 so that |
\f1\b \cf2 f(x) - f(y)
\f0\b0 \cf2 | &lt; epsilon whenever 
\f1\b \cf2 x, y 
\f0\b0 \cf2 belongs to S and |
\f1\b \cf2 x - y
\f0\b0 \cf2 | &lt; delta.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;1.8 Uniform Continuity&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 1.8 Uniform Continuity}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{277.72077562997674, -1626.5074525546222}</string>
						<key>nodeID</key>
						<string>C46CACA6-8C95-407F-B4A8-CDB707EFC711</string>
						<key>strokeColor</key>
						<string>{0.600, 0.600, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{564.37626972873613, -1757.1739922901747}</string>
								<key>nodeID</key>
								<string>C8EE5D52-0518-4C8F-9090-12CE2A038D85</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;page 43-46 (new notation of differentiability, skip the rest until the bottom of page 50 and we cover page 51), exercise 5, 6 and 10 can be skipped.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 page 43-46 (new notation of differentiability, skip the rest until the bottom of page 50 and we cover page 51), exercise 5, 6 and 10 can be skipped.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{564.37626972873613, -1654.1246249159219}</string>
								<key>nodeID</key>
								<string>DAA58C6A-4815-4CE6-A2B0-5BAF0F43520C</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{929.23188101467167, -1663.6198109473112}</string>
										<key>nodeID</key>
										<string>C2EB1FE3-D82F-4379-9254-A281D59B01B9</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: suppose min at, the quotient form, left side, the slope &amp;lt;= 0, the right side slope &amp;gt;= 0, then = 0&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: suppose min at, the quotient form, left side, the slope &lt;= 0, the right side slope &gt;= 0, then = 0}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.5 prop: f is defined on open I and a belongs to I, if f has a local max/min at a and f is diff at a, then f&amp;apos;(a) = 0.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.5 prop: f is defined on open I and a belongs to I, if f has a local max/min at a and f is diff at a, then f'(a) = 0.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{564.37626972873613, -1594.1739922901747}</string>
								<key>nodeID</key>
								<string>CF88FB6C-3746-4957-ADE2-0FA0FD5CD47B</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{944.40006246976418, -1555.8738950169061}</string>
										<key>nodeID</key>
										<string>E1617E46-00AE-4B00-9DA7-37FAF3D859E1</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: if extreme values on endpoints, then constant function, slope = 0; if not at least one extreme point exists, and slope = 0 by 2.5&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: if extreme values on endpoints, then constant function, slope = 0; if not at least one extreme point exists, and slope = 0 by 2.5}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.6 Rolle&amp;apos;s Thm: f cont. on [a, b] and diff on (a, b), if f(a) = f(b), there is at least one point c between (a, b) such that f&amp;apos;(c ) = 0&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.6 Rolle's Thm: f cont. on [a, b] and diff on (a, b), if f(a) = f(b), there is at least one point c between (a, b) such that f'(c ) = 0}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{561.48352435585684, -1450.478566790008}</string>
								<key>nodeID</key>
								<string>97C359F5-0D25-4012-A5DD-2AB89B99DA77</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{934.01103800426836, -1427.3551708504456}</string>
										<key>nodeID</key>
										<string>A7B649D6-9824-4F59-937C-B39335BE99D1</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;(sketch is useful) proof: sketch, construct a function g(x) = f(x) - l(x), apply Rolle&amp;apos;s thm. note that l(x) = f(a) + (f(b) - f(a))/(b-a) * (x - a)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 (sketch is useful) proof: sketch, construct a function g(x) = f(x) - l(x), apply Rolle's thm. note that l(x) = f(a) + (f(b) - f(a))/(b-a) * (x - a)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.7 Mean Value Thm I: f is conti on [a, b] and diff on (a, b), there is c belongs to (a, b) s.t. f&amp;apos;(c ) = (f(b) - f(a))/(b-a)&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.7 Mean Value Thm I: f is conti on [a, b] and diff on (a, b), there is c belongs to (a, b) s.t. f'(c ) = (f(b) - f(a))/(b-a)}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{557.72184134850568, -1336.9917210181757}</string>
								<key>nodeID</key>
								<string>77CD6C0E-ABB5-45AE-B37E-5E4BFEB154B8</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{670.67247397425263, -1336.9917210181757}</string>
										<key>nodeID</key>
										<string>B4589B19-BC90-4F0B-8FC3-71048591FFCE</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (a, b, c) basically just apply MVT I&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (a, b, c) basically just apply MVT I}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.8&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.8}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.1 Differentiability in One Variable&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.1 Differentiability in One Variable}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{324.39361924650711, -1140.3278297254935}</string>
						<key>nodeID</key>
						<string>C60CE678-6F0C-4CD1-A832-090FE246A596</string>
						<key>strokeColor</key>
						<string>{0.600, 0.800, 0.800, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{630.40840084273168, -1170.6954877715796}</string>
								<key>nodeID</key>
								<string>39A5B0B3-7C71-49E5-9D91-02227BCC52E0</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{833.88284645090243, -1204.7403378926365}</string>
										<key>nodeID</key>
										<string>5D0F4242-BDA7-43A4-BAE0-26653D1A7BB5</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof: f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a+h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)-f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)-gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; tends to 0 as &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; tends to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, since gradient f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;(a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; vanishes as &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; does, we have f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;(a+h)-&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) tends to 0 as &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; tends to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, so continuous.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof: f(
\f1\b \cf2 a+h
\f0\b0 \cf2 )-f(
\f1\b \cf2 a
\f0\b0 \cf2 )-gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 )
\f1\b \cf2 h
\f0\b0 \cf2  tends to 0 as 
\f1\b \cf2 h
\f0\b0 \cf2  tends to 
\f1\b \cf2 0
\f0\b0 \cf2 , since gradient f
\f1\b \cf2 (a
\f0\b0 \cf2 )
\f1\b \cf2 h
\f0\b0 \cf2  vanishes as 
\f1\b \cf2 h
\f0\b0 \cf2  does, we have f
\f1\b \cf2 (a+h)-
\f0\b0 \cf2 f(
\f1\b \cf2 a
\f0\b0 \cf2 ) tends to 0 as 
\f1\b \cf2 h
\f0\b0 \cf2  tends to 
\f1\b \cf2 0
\f0\b0 \cf2 , so continuous.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.18 diff -&amp;gt; continuous&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.18 diff -&gt; continuous}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{650.67558812388461, -1052.8055330019304}</string>
								<key>nodeID</key>
								<string>BE470025-0A35-4708-A7E8-EE800B3812F9</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{980.25796310526403, -1037.4054890517148}</string>
										<key>nodeID</key>
										<string>AD6A175D-84D2-43BB-BA80-A4EDD558DD86</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof: write the definition of diff and simplify it with &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h = &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;t&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, discuss the cases for t&amp;gt;0 and t&amp;lt;0, either case we have the quantity tends to 0 as t tends to 0, so equal…&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof: write the definition of diff and simplify it with 
\f1\b \cf2 h = 
\f0\b0 \cf2 t
\f1\b \cf2 u
\f0\b0 \cf2 , discuss the cases for t&gt;0 and t&lt;0, either case we have the quantity tends to 0 as t tends to 0, so equal\'85}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.23 if f is diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a,&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; then the directional derivatives of f at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; all exist, and they are given by gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.23 if f is diff at 
\f1\b \cf2 a,
\f0\b0 \cf2  then the directional derivatives of f at 
\f1\b \cf2 a
\f0\b0 \cf2  all exist, and they are given by gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 )
\f1\b \cf2 u}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{643.55094549603973, -1272.1319296048259}</string>
								<key>nodeID</key>
								<string>0198915F-C4C5-4CFC-BB00-DFE85E85EDD1</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.17 if f is diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, then the partial derivatives all exist, and they are the components of the vector gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.17 if f is diff at 
\f1\b \cf2 a
\f0\b0 \cf2 , then the partial derivatives all exist, and they are the components of the vector gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 )}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{636.93251092780702, -1124.6744650843764}</string>
								<key>nodeID</key>
								<string>4D793609-8B3D-4F24-A067-56E4FFCF1F8A</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{998.93251092780702, -1124.6744650843764}</string>
										<key>nodeID</key>
										<string>E98C490C-588C-4CEB-B7CF-6457E8C5F761</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;note that C1 =&amp;gt; diff =&amp;gt; partial derivatives exist&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 note that C1 =&gt; diff =&gt; partial derivatives exist}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.19 suppose partial derivatives all exist on some neighbourhood of &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; and that they are continuous at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, then f is differentiable at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.19 suppose partial derivatives all exist on some neighbourhood of 
\f1\b \cf2 a
\f0\b0 \cf2  and that they are continuous at 
\f1\b \cf2 a
\f0\b0 \cf2 , then f is differentiable at 
\f1\b \cf2 a
\f0\b0 \cf2 .}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.2 Differentiability in Several Variables&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.2 Differentiability in Several Variables}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{360.84745151707432, -791.82360560406391}</string>
						<key>nodeID</key>
						<string>398BBC2C-CC6D-44FF-A48E-75F2D80B64DE</string>
						<key>strokeColor</key>
						<string>{0.000, 0.600, 0.600, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{606.2197516252653, -935.7718123639329}</string>
								<key>nodeID</key>
								<string>DD73F82F-B03E-449C-9921-69BEE81D9A8D</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{978.1370972545518, -923.56014846153857}</string>
										<key>nodeID</key>
										<string>8174AFC6-0662-477F-8F66-6523F902AD59</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1334.1370972545519, -923.56014846153857}</string>
												<key>nodeID</key>
												<string>0F850A50-F990-41DE-8C54-8AA1EA1DCB18</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1. diff of f and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2. then write the expanding form of the composite function 3. finally we check the error term to vanishes&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1. diff of f and 
\f1\b \cf2 g 
\f0\b0 \cf2 2. then write the expanding form of the composite function 3. finally we check the error term to vanishes}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (understand most of the key ideas from 2.1 and 2.2)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (understand most of the key ideas from 2.1 and 2.2)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.26 (IMPORTANT) &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;CHAIN RULE I&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;: &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t) diff at t=a, f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x=b &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;and &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b=g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(a). the composite function…&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.26 (IMPORTANT) 
\f1\b \cf2 CHAIN RULE I
\f0\b0 \cf2 : 
\f1\b \cf2 g
\f0\b0 \cf2 (t) diff at t=a, f(
\f1\b \cf2 x
\f0\b0 \cf2 ) diff at 
\f1\b \cf2 x=b 
\f0\b0 \cf2 and 
\f1\b \cf2 b=g
\f0\b0 \cf2 (a). the composite function\'85}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{603.92543335215839, -864.15306186184353}</string>
								<key>nodeID</key>
								<string>A9830F1E-3FC1-45F7-9BE4-B623E1DE11A9</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.29 Chain Rule II (similar to 2.26, but this time &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; is also a vector)&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.29 Chain Rule II (similar to 2.26, but this time 
\f1\b \cf2 f
\f0\b0 \cf2  is also a vector)}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{606.2197516252653, -817.7718123639329}</string>
								<key>nodeID</key>
								<string>7490C00C-09D9-40B3-A8A5-D23BFEE117A4</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;skip 2.36, and then seriously read bottom of page 68 and page 69.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 skip 2.36, and then seriously read bottom of page 68 and page 69.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{622.41684038938263, -773.65172299885171}</string>
								<key>nodeID</key>
								<string>D651160D-1C82-4CE3-A290-8BE489BFC9AF</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{1062.8358977684579, -786.98227424628317}</string>
										<key>nodeID</key>
										<string>49AC106F-A218-4A20-9E8A-D98CBCAE5D56</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1432.8660117243326, -843.5560402579581}</string>
												<key>nodeID</key>
												<string>DCA43E2C-63CC-4156-8B7E-4E8E9A7F72CC</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;suppose that (x, y, z) = &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t) is a parametric representation of a smooth curve on S. By chain rule, (d/dt)F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t))=gradient F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t))&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&amp;apos;&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t), on the other hand, curve lies on S so F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t))=0, so (d/dt)F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;g&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;(t))=0, so any curve on the S, the gradient of F is orthogonal to the tangent vector to the curve at each point on the curve.since such curves can go in any direction on the surface, we conclude that at any point &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;belongs to S, …&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 suppose that (x, y, z) = 
\f1\b \cf2 g
\f0\b0 \cf2 (t) is a parametric representation of a smooth curve on S. By chain rule, (d/dt)F(
\f1\b \cf2 g
\f0\b0 \cf2 (t))=gradient F(
\f1\b \cf2 g
\f0\b0 \cf2 (t))
\f1\b \cf2 g'
\f0\b0 \cf2 (t), on the other hand, curve lies on S so F(
\f1\b \cf2 g
\f0\b0 \cf2 (t))=0, so (d/dt)F(
\f1\b \cf2 g
\f0\b0 \cf2 (t))=0, so any curve on the S, the gradient of F is orthogonal to the tangent vector to the curve at each point on the curve.since such curves can go in any direction on the surface, we conclude that at any point 
\f1\b \cf2 a 
\f0\b0 \cf2 belongs to S, \'85}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (found in preceding paragraph. don&amp;apos;t need to worry about what a curve or surface is, just the basic analytic argument for why the various things are orthogonal.)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (found in preceding paragraph. don't need to worry about what a curve or surface is, just the basic analytic argument for why the various things are orthogonal.)}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{1062.8358977684579, -691.31560821539938}</string>
										<key>nodeID</key>
										<string>F94B22C3-D12C-433C-9D12-79CBE0EE68E7</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.38 Cor: under the same conditions, the equation of the tangent plane to S at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;is gradient F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) (&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x-a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)=0&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.38 Cor: under the same conditions, the equation of the tangent plane to S at 
\f1\b \cf2 a 
\f0\b0 \cf2 is gradient F(
\f1\b \cf2 a
\f0\b0 \cf2 ) (
\f1\b \cf2 x-a
\f0\b0 \cf2 )=0}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.37 sps F is a diff function on some open set U in R^3, S={(x, y, z)belongs to U: F(x, y, z)=0} is a smooth surface. If &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; belongs to S and gradient F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) != 0, then the vector gradient F(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) is perpendicular, or normal to the surface S at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.37 sps F is a diff function on some open set U in R^3, S=\{(x, y, z)belongs to U: F(x, y, z)=0\} is a smooth surface. If 
\f1\b \cf2 a
\f0\b0 \cf2  belongs to S and gradient F(
\f1\b \cf2 a
\f0\b0 \cf2 ) != 0, then the vector gradient F(
\f1\b \cf2 a
\f0\b0 \cf2 ) is perpendicular, or normal to the surface S at 
\f1\b \cf2 a
\f0\b0 \cf2 .}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.3 The Chain Rule&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.3 The Chain Rule}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{378.64560323979856, -586.90380725248838}</string>
						<key>nodeID</key>
						<string>068EE2EE-E569-4E7B-BD72-9F892178E107</string>
						<key>strokeColor</key>
						<string>{0.400, 0.200, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{625.63768355258469, -634.4546826699609}</string>
								<key>nodeID</key>
								<string>027E0151-32F9-45B8-B03B-3AA7EB849B8B</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{861.3830192491049, -629.09794767143035}</string>
										<key>nodeID</key>
										<string>D5350994-7DF9-44ED-B190-DDA9C1FFDF48</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof similar idea to prove MVT I, but for several variables. construct a composite function say s(t) = f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;+t&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) for t in [0,1], chain rule, s&amp;apos;(t)=gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;+t&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) (&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b-a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;), then there exists u in (0, 1), … done.&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof similar idea to prove MVT I, but for several variables. construct a composite function say s(t) = f(
\f1\b \cf2 a
\f0\b0 \cf2 +t
\f1\b \cf2 h
\f0\b0 \cf2 ) for t in [0,1], chain rule, s'(t)=gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 +t
\f1\b \cf2 h
\f0\b0 \cf2 ) (
\f1\b \cf2 b-a
\f0\b0 \cf2 ), then there exists u in (0, 1), \'85 done.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.39 Mean Value Theorem III&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.39 Mean Value Theorem III}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{613.64560323979856, -527.90380725248838}</string>
								<key>nodeID</key>
								<string>4405DEFB-2D4B-4536-9AE5-A124B459C3BD</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{912.43054861925998, -539.90464517017699}</string>
										<key>nodeID</key>
										<string>C1A424BC-8F0C-4C24-BB0E-E1AC6E9F7873</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1268.43054861926, -539.90464517017699}</string>
												<key>nodeID</key>
												<string>73598682-C51B-410F-9A4B-32678EA2A09A</string>
												<key>strokeColor</key>
												<string>{0.400, 0.200, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: MVT III + Cauchy&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: MVT III + Cauchy}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.40 diff, open convex S, |gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)|&amp;lt;=M for all &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S, then |f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)-f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)|&amp;lt;=M|&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;b-a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.40 diff, open convex S, |gradient f(
\f1\b \cf2 x
\f0\b0 \cf2 )|&lt;=M for all 
\f1\b \cf2 x
\f0\b0 \cf2  in S, then |f(
\f1\b \cf2 b
\f0\b0 \cf2 )-f(
\f1\b \cf2 a
\f0\b0 \cf2 )|&lt;=M|
\f1\b \cf2 b-a
\f0\b0 \cf2 |}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{919.02210590900472, -490.0658903992562}</string>
										<key>nodeID</key>
										<string>FFEAB8A0-FF14-4B9F-B88A-8E07CCA8F1AB</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.41 f diff, open convex S, gradient = 0, constant.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.41 f diff, open convex S, gradient = 0, constant.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;corollaries 2.40 and 2.41&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 corollaries 2.40 and 2.41}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{600.73981281554632, -396.79952689079801}</string>
								<key>nodeID</key>
								<string>AABF6647-E4EB-4439-9E4A-6E723D3C43D3</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{977.75034761796849, -411.94142576675267}</string>
										<key>nodeID</key>
										<string>84116089-596E-410F-8E78-9D30032A5CA2</string>
										<key>strokeColor</key>
										<string>{0.400, 0.200, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1336.7503476179686, -411.94142576675267}</string>
												<key>nodeID</key>
												<string>3824E443-76C2-4F9E-A557-C3E83C2BE201</string>
												<key>strokeColor</key>
												<string>{0.400, 0.200, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;find where S violates conditions of disconnection. use a lemma saying that disjoint open sets satisfy closure intersect = empty. last thing we should do is to show open.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 find where S violates conditions of disconnection. use a lemma saying that disjoint open sets satisfy closure intersect = empty. last thing we should do is to show open.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (structure here is similar to 1.30, read them together)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (structure here is similar to 1.30, read them together)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.42 f diff, S open connected, gradient = 0 for all &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; in S, then f is constant on S.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.42 f diff, S open connected, gradient = 0 for all 
\f1\b \cf2 x
\f0\b0 \cf2  in S, then f is constant on S.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.4 The Mean Value Theorem&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.4 The Mean Value Theorem}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{318.72356334593042, -281.62734469438385}</string>
						<key>nodeID</key>
						<string>7F624F93-A80B-48A3-B5F2-F9F7834AD267</string>
						<key>strokeColor</key>
						<string>{1.000, 0.400, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{699.97911708853599, -313.88807487768042}</string>
								<key>nodeID</key>
								<string>7B75EDAB-027C-470E-9032-36E6A7CCE227</string>
								<key>strokeColor</key>
								<string>{1.000, 0.400, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{1060.979117088536, -313.88807487768042}</string>
										<key>nodeID</key>
										<string>AF3698FD-7A25-4B4A-8198-06928ABAB25D</string>
										<key>strokeColor</key>
										<string>{1.000, 0.400, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;remember the Cramer&amp;apos;s rule… actually just remember the two determinant of matrices (very similar two matrices)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 remember the Cramer's rule\'85 actually just remember the two determinant of matrices (very similar two matrices)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;the derivation starting on the bottom of page 75 and continuing onto the top of page 76. the higher dimensional version was asked in the homeworks but you only need to reproduce (or use) the case in the book.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 the derivation starting on the bottom of page 75 and continuing onto the top of page 76. the higher dimensional version was asked in the homeworks but you only need to reproduce (or use) the case in the book.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.5 Functional Relations and Implicit Functions: A First Look&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.5 Functional Relations and Implicit Functions: A First Look}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{311.66329773323901, -146.23473619417632}</string>
						<key>nodeID</key>
						<string>E69213A0-5F27-4789-AC10-24F6E325C730</string>
						<key>strokeColor</key>
						<string>{1.000, 0.800, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{590.66329773323901, -146.23473619417632}</string>
								<key>nodeID</key>
								<string>4931081D-5C9B-48AF-9697-6728D2ABA113</string>
								<key>strokeColor</key>
								<string>{1.000, 0.800, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{947.66329773323901, -146.23473619417632}</string>
										<key>nodeID</key>
										<string>59678424-0067-4086-A42B-43A5AAE3C445</string>
										<key>strokeColor</key>
										<string>{1.000, 0.800, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1288.6113061657641, -175.64432382647237}</string>
												<key>nodeID</key>
												<string>0FED385F-5601-4BAF-B989-2AD076B1F384</string>
												<key>strokeColor</key>
												<string>{1.000, 0.800, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array>
													<dict>
														<key>contentAlignment</key>
														<integer>1</integer>
														<key>fillColor</key>
														<string>{1.000, 0.961, 0.863, 1.000}</string>
														<key>isDecreasingBranchThickness</key>
														<true/>
														<key>isDrawingFill</key>
														<false/>
														<key>isLeftAligned</key>
														<false/>
														<key>location</key>
														<string>{1600.6113061657641, -175.64432382647237}</string>
														<key>nodeID</key>
														<string>00C9B7D2-61E8-49AD-8BAD-A9E6A608C585</string>
														<key>strokeColor</key>
														<string>{1.000, 0.800, 0.000, 1.000}</string>
														<key>strokeStyle</key>
														<integer>0</integer>
														<key>strokeWidth</key>
														<real>2</real>
														<key>subnodes</key>
														<array/>
														<key>title</key>
														<dict>
															<key>constrainedWidth</key>
															<integer>300</integer>
															<key>htmlText</key>
															<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;Set up an assistance function D, and 2 single variable functions (the variable of the single-variable function lies on the &amp;quot;unchanged&amp;quot; part of multi-variable function). Apply MVT I and use continuity to eliminate the error.&lt;/p&gt;</string>
															<key>shrinkToFitContent</key>
															<integer>1</integer>
															<key>text</key>
															<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Set up an assistance function D, and 2 single variable functions (the variable of the single-variable function lies on the "unchanged" part of multi-variable function). Apply MVT I and use continuity to eliminate the error.}</string>
														</dict>
													</dict>
												</array>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (think of why D makes sense as the &amp;quot;difference of differences&amp;quot;)&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (think of why D makes sense as the "difference of differences")}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.45 if all partial exist, continuous, then the change of order does not affect the outcome.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.45 if all partial exist, continuous, then the change of order does not affect the outcome.}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{948.29003740594203, -95.568070163292532}</string>
										<key>nodeID</key>
										<string>EFDC7F7E-B3F2-4F9A-B862-FF7554A9C3F2</string>
										<key>strokeColor</key>
										<string>{1.000, 0.800, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;Cor 2.46 n =2 case&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Cor 2.46 n =2 case}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{948.29003740594203, -44.901404132408743}</string>
										<key>nodeID</key>
										<string>62B3C45F-0B8C-4021-B505-390A77839A40</string>
										<key>strokeColor</key>
										<string>{1.000, 0.800, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1302.290037405942, -44.901404132408743}</string>
												<key>nodeID</key>
												<string>E38E89C3-699E-4BA9-8BF4-B8F58069E4F5</string>
												<key>strokeColor</key>
												<string>{1.000, 0.800, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: begin with binomial as a base case, then inductively prove it for multinomial.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: begin with binomial as a base case, then inductively prove it for multinomial.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.52 Multinomial thm (very complex in notations)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.52 Multinomial thm (very complex in notations)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;up to corollary 2.46, then skip the rest until Multi-index notation and the multinomial theorem.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 up to corollary 2.46, then skip the rest until Multi-index notation and the multinomial theorem.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.6 Higher-Order Partial Derivatives&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.6 Higher-Order Partial Derivatives}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{315.35448289770761, -0.29208698755644491}</string>
						<key>nodeID</key>
						<string>140CDDEE-1540-462D-8CE8-4886461CE67F</string>
						<key>strokeColor</key>
						<string>{0.600, 0.600, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{515.04887840036076, -32.558039043656549}</string>
								<key>nodeID</key>
								<string>8E59E767-3CB5-43B9-B52F-1EB9C9D99B00</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;skip Taylor with integral remainder, start from page 88 with Lagrange remainder.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 skip Taylor with integral remainder, start from page 88 with Lagrange remainder.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{543.72218196728841, 31.724055668043661}</string>
								<key>nodeID</key>
								<string>3C83E817-3DD8-48E5-BE67-A665824B7706</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{905.72218196728841, 31.724055668043661}</string>
										<key>nodeID</key>
										<string>8E13F7A1-F7AF-42E6-930C-7662ECB58862</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;note: use Rolle to prove Lagrange&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 note: use Rolle to prove Lagrange}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.62 g is k+1 times diff on [a, b]. if g(a) = g(b) and g^(j)(a)=0 for 1&amp;lt;=j&amp;lt;=k, then there exists c in (a, b) s.t. g^(k+1)(c )=0.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.62 g is k+1 times diff on [a, b]. if g(a) = g(b) and g^(j)(a)=0 for 1&lt;=j&lt;=k, then there exists c in (a, b) s.t. g^(k+1)(c )=0.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{546.90213750666885, 106.255156222761}</string>
								<key>nodeID</key>
								<string>818BCDD3-8555-451B-91F6-9676A41C5AB3</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{912.82600892639107, 84.637930275011854}</string>
										<key>nodeID</key>
										<string>A8637FA5-54C2-4795-A881-6A938B1DE579</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1202.0599118314358, 26.954369749221769}</string>
												<key>nodeID</key>
												<string>DAEE9988-227F-4410-A902-B25CAF8A4061</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;SEE THE NOTES FOR DETAILS&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 SEE THE NOTES FOR DETAILS}</string>
												</dict>
											</dict>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1202.0599118314358, 73.454369749221769}</string>
												<key>nodeID</key>
												<string>A95F4C9B-4199-4C04-9913-7FE749CE6BDE</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;set up a special g(t), check g(0)=g(t)=0, and its nth derivative is also 0. apply thm 2.62 and find Ra,k(h)&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 set up a special g(t), check g(0)=g(t)=0, and its nth derivative is also 0. apply thm 2.62 and find Ra,k(h)}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;generalization of the proof of MVT1&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 generalization of the proof of MVT1}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.63 Taylor&amp;apos;s thm with Lagrange&amp;apos;s Remainder&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.63 Taylor's thm with Lagrange's Remainder}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{589.61164534343948, 218.59757023133113}</string>
								<key>nodeID</key>
								<string>7588A2EB-CAD2-409C-84FD-AEA5FB8C0A79</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{997.01453455925343, 215.31008079573132}</string>
										<key>nodeID</key>
										<string>3C196417-29BA-4DEA-AE11-A77E4DA4C138</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1352.0145345592534, 215.31008079573132}</string>
												<key>nodeID</key>
												<string>843BD7E6-5DF1-410C-BFC2-F0C52934FC48</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;our proof deals with the 2nd assertion at first, where we use the multinomial theorem. then just use taxi-cab norm is equivalent to regular norm for the 1st assertion.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 our proof deals with the 2nd assertion at first, where we use the multinomial theorem. then just use taxi-cab norm is equivalent to regular norm for the 1st assertion.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;proof (but only the Lagrange&amp;apos;s Remainder parts. see class notes for expansion on relating ||&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;||and |&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|)&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 proof (but only the Lagrange's Remainder parts. see class notes for expansion on relating ||
\f1\b \cf2 h
\f0\b0 \cf2 ||and |
\f1\b \cf2 h
\f0\b0 \cf2 |)}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{997.01453455925343, 295.97674682661511}</string>
										<key>nodeID</key>
										<string>FE3DE801-E69C-4BC9-8E85-998C25835C6E</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;1st assertion: f is of class Ck on S, then R/|&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;|^k tends to 0 as &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; tends to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 1st assertion: f is of class Ck on S, then R/|
\f1\b \cf2 h
\f0\b0 \cf2 |^k tends to 0 as 
\f1\b \cf2 h
\f0\b0 \cf2  tends to 
\f1\b \cf2 0}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.75 2 properties of remainder&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.75 2 properties of remainder}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{607.8279207466835, 326.96605855418613}</string>
								<key>nodeID</key>
								<string>02E82DDF-C91A-40CB-9C1E-25E1D4A09229</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.76 lemma: if P(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) is a polynomial of degree &amp;lt;= k that vanishes to order &amp;gt;k as &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; tends to &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;. then P is always equal to 0.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.76 lemma: if P(
\f1\b \cf2 h
\f0\b0 \cf2 ) is a polynomial of degree &lt;= k that vanishes to order &gt;k as 
\f1\b \cf2 h
\f0\b0 \cf2  tends to 
\f1\b \cf2 0
\f0\b0 \cf2 . then P is always equal to 0.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{599.86844749746251, 447.50060767687376}</string>
								<key>nodeID</key>
								<string>795E5D16-2167-4614-80D3-AFA8EEE7F1BE</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{987.50784296524853, 478.78484764581628}</string>
										<key>nodeID</key>
										<string>50B650F0-8660-4CAA-ABD1-035175109AAC</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof: use 2.76 to compare the difference between two of them, find it 0.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof: use 2.76 to compare the difference between two of them, find it 0.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.77 uniqueness of taylor polynomial: sps f is Ck near &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;. if f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a+h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)=Q(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;)+E(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) where Q is a polynomial of degree &amp;lt;=k, and E(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;h&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) is the error term, then Q is the Taylor polynomial Pa,k.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.77 uniqueness of taylor polynomial: sps f is Ck near 
\f1\b \cf2 a
\f0\b0 \cf2 . if f(
\f1\b \cf2 a+h
\f0\b0 \cf2 )=Q(
\f1\b \cf2 h
\f0\b0 \cf2 )+E(
\f1\b \cf2 h
\f0\b0 \cf2 ) where Q is a polynomial of degree &lt;=k, and E(
\f1\b \cf2 h
\f0\b0 \cf2 ) is the error term, then Q is the Taylor polynomial Pa,k.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{589.4519958768542, 159.33841540503488}</string>
								<key>nodeID</key>
								<string>6B9AC6AE-5000-4D47-81CF-B386F2DB73B6</string>
								<key>strokeColor</key>
								<string>{0.600, 0.600, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{919.83165732737007, 138.20586861399659}</string>
										<key>nodeID</key>
										<string>28A9C81C-2605-4FBE-A33C-31271356B6EF</string>
										<key>strokeColor</key>
										<string>{0.600, 0.600, 0.000, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1281.8316573273701, 138.20586861399659}</string>
												<key>nodeID</key>
												<string>703B78A4-26F7-4683-9546-FE7496DE8912</string>
												<key>strokeColor</key>
												<string>{0.600, 0.600, 0.000, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;thm 2.63 to express a Taylor polynomial and substitute the single-variable function by the multi-variable one. Then use multinomial theorem to expand the derivative operator.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 thm 2.63 to express a Taylor polynomial and substitute the single-variable function by the multi-variable one. Then use multinomial theorem to expand the derivative operator.}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (only need to know 2.69 and 2.72 parts that use the Lagrange Remainder, the proof is preceding)(Can you see how this thm is a generalization of the proof of MVT3?)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (only need to know 2.69 and 2.72 parts that use the Lagrange Remainder, the proof is preceding)(Can you see how this thm is a generalization of the proof of MVT3?)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.68 Taylor&amp;apos;s thm in several variables with Lagrange&amp;apos;s Remainder&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.68 Taylor's thm in several variables with Lagrange's Remainder}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.7 Taylor&amp;apos;s Theorem&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.7 Taylor's Theorem}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{328.42245420306097, 572.65902703794859}</string>
						<key>nodeID</key>
						<string>F6ACE005-7E1E-4254-9E40-0B2DA3E24728</string>
						<key>strokeColor</key>
						<string>{0.600, 0.800, 0.800, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{539.0930446113324, 548.29376853434565}</string>
								<key>nodeID</key>
								<string>C6CB3E90-17E2-4715-B034-5A075F5DE8CD</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;special emphasis on thm 2.81, its application and proof&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 special emphasis on thm 2.81, its application and proof}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{545.80454539849791, 622.16102220242601}</string>
								<key>nodeID</key>
								<string>1BE2ADD9-2389-4F45-BE94-36BB78BCAF25</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{985.33891279273269, 615.47702501326785}</string>
										<key>nodeID</key>
										<string>5B3C3509-7FF8-4B21-B1C0-B27543D35431</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1273.0956073121288, 550.04173690596963}</string>
												<key>nodeID</key>
												<string>895D7C8E-CD15-451B-BF7F-90DCDA8D14D7</string>
												<key>strokeColor</key>
												<string>{0.600, 0.800, 0.800, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;f has a local extreme at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, then for any unit vector &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;, the function g(t)=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a+&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;t&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) has a local extreme at t=0,so g&amp;apos;(0)=partial &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt; f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) = 0, in particular it is 0 for all components then the gradient is &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 f has a local extreme at 
\f1\b \cf2 a
\f0\b0 \cf2 , then for any unit vector 
\f1\b \cf2 u
\f0\b0 \cf2 , the function g(t)=f(
\f1\b \cf2 a+
\f0\b0 \cf2 t
\f1\b \cf2 u
\f0\b0 \cf2 ) has a local extreme at t=0,so g'(0)=partial 
\f1\b \cf2 u
\f0\b0 \cf2  f(
\f1\b \cf2 a
\f0\b0 \cf2 ) = 0, in particular it is 0 for all components then the gradient is 
\f1\b \cf2 0
\f0\b0 \cf2 .}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (see how it extends 2.5)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (see how it extends 2.5)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;2.78 prop: f has a local max/min at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;and f is diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a, &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;then gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;) = &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 12px "Lucida Grande"; -cocoa-font-postscriptname: "LucidaGrande"; '&gt;.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 LucidaGrande-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 2.78 prop: f has a local max/min at 
\f1\b \cf2 a 
\f0\b0 \cf2 and f is diff at 
\f1\b \cf2 a, 
\f0\b0 \cf2 then gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 ) = 
\f1\b \cf2 0
\f0\b0 \cf2 .}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{565.71341534457417, 689.81384258980779}</string>
								<key>nodeID</key>
								<string>F067B485-5BE5-40F9-9EC4-984B625B3745</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{924.71341534457417, 689.81384258980779}</string>
										<key>nodeID</key>
										<string>E1A92D8F-7543-4ABA-B93E-9973AD7FC395</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;proof: 2nd order taylor poly can be expressed as multiplication of matrix and can be transferred to the product of coordinates and eigenvalues.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\b\fs28 \cf2 proof: 2nd order taylor poly can be expressed as multiplication of matrix and can be transferred to the product of coordinates and eigenvalues.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.81 f of C2 at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;, gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) = 0, H be Hessian. for local min sufficient: all eigenvalues of H strictly positive, necessary: all eigenvalues of H non-negative &lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.81 f of C2 at 
\f1\b \cf2 a
\f0\b0 \cf2 , gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 ) = 0, H be Hessian. for local min sufficient: all eigenvalues of H strictly positive, necessary: all eigenvalues of H non-negative }</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{555.16214146331924, 769.20426174638533}</string>
								<key>nodeID</key>
								<string>D23334EC-A6C4-4978-92E7-D4E81C399872</string>
								<key>strokeColor</key>
								<string>{0.600, 0.800, 0.800, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{920.02068759844008, 773.58449479745241}</string>
										<key>nodeID</key>
										<string>3A7B4CEA-3D82-46AE-AB76-4A8C7816D6D0</string>
										<key>strokeColor</key>
										<string>{0.600, 0.800, 0.800, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1282.02068759844, 773.58449479745241}</string>
												<key>nodeID</key>
												<string>62015A56-3815-4B8E-BC0F-0B95C0A37835</string>
												<key>strokeColor</key>
												<string>{0.600, 0.800, 0.800, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;product of eigenvalues = alpha gamma - beta square, then alpha = H&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;*&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;u&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;, so H and alpha have the same sign, now follow 2.81&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 product of eigenvalues = alpha gamma - beta square, then alpha = H
\f1\b \cf2 u
\f0\b0 \cf2 *
\f1\b \cf2 u
\f0\b0 \cf2 , so H and alpha have the same sign, now follow 2.81}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (this is effectively a corollary of 2.81, but will be very useful for applications)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (this is effectively a corollary of 2.81, but will be very useful for applications)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.82 application of thm 2.81, memorize &amp;quot;by change of basis, alpha &amp;gt; 0 implies eigenvalues &amp;gt;0&amp;quot;. C2 class, gradient = &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;, alpha = second partial 1, beta = partial 1 partial 2, gamma = second partial 2. then alpha gamma - beta square &amp;lt; 0 saddle; &amp;gt;0, alpha &amp;gt; 0, min; &amp;gt;0, alpha &amp;lt; 0, max; = 0, no conclusion.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.82 application of thm 2.81, memorize "by change of basis, alpha &gt; 0 implies eigenvalues &gt;0". C2 class, gradient = 
\f1\b \cf2 0
\f0\b0 \cf2 , alpha = second partial 1, beta = partial 1 partial 2, gamma = second partial 2. then alpha gamma - beta square &lt; 0 saddle; &gt;0, alpha &gt; 0, min; &gt;0, alpha &lt; 0, max; = 0, no conclusion.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.8 Critical Points&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.8 Critical Points}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{290.97859864843917, 911.89906488702309}</string>
						<key>nodeID</key>
						<string>62D46029-BB30-4A60-B55B-49BD03DD5252</string>
						<key>strokeColor</key>
						<string>{0.000, 0.600, 0.600, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{562.23128184183838, 883.48893168320683}</string>
								<key>nodeID</key>
								<string>4E5EF191-3373-495D-BFC9-33AA12E8937A</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{936.75593240427565, 899.26420942418099}</string>
										<key>nodeID</key>
										<string>19E0E84F-5AC7-475F-9F59-25E66C9EAFE7</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1211.9162776432311, 846.1145821243399}</string>
												<key>nodeID</key>
												<string>36B92401-8580-47D2-81C7-823139A21F22</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;construct a set according to the claim. prove our set is compact (closed and bounded) then we apply EVT to show the absolute extreme.&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 construct a set according to the claim. prove our set is compact (closed and bounded) then we apply EVT to show the absolute extreme.}</string>
												</dict>
											</dict>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1211.7794522664974, 901.12774604007063}</string>
												<key>nodeID</key>
												<string>058D1B08-B7AB-46B1-AAB1-B0993E7254B8</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;(a) first assertion absolutely no ma. pick &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;0 in S, let V={&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt; belongs to S: f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;)&amp;lt;=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;). then V is closed ( by 1.13, continuous fund maps a closed set to another closed set) and V is also bounded (f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) is the &amp;quot;bound&amp;quot;). by EVT, f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) is a local min for V, also it&amp;apos;s global. why? because f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;)&amp;gt;=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x0&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;)&amp;gt;=f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) for &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;x&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt; in S\V.&lt;/span&gt;&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 (a) first assertion absolutely no ma. pick 
\f1\b \cf2 x
\f0\b0 \cf2 0 in S, let V=\{
\f1\b \cf2 x
\f0\b0 \cf2  belongs to S: f(
\f1\b \cf2 x
\f0\b0 \cf2 )&lt;=f(
\f1\b \cf2 x0
\f0\b0 \cf2 ). then V is closed ( by 1.13, continuous fund maps a closed set to another closed set) and V is also bounded (f(
\f1\b \cf2 x0
\f0\b0 \cf2 ) is the "bound"). by EVT, f(
\f1\b \cf2 a
\f0\b0 \cf2 ) is a local min for V, also it's global. why? because f(
\f1\b \cf2 x
\f0\b0 \cf2 )&gt;=f(
\f1\b \cf2 x0
\f0\b0 \cf2 )&gt;=f(
\f1\b \cf2 a
\f0\b0 \cf2 ) for 
\f1\b \cf2 x
\f0\b0 \cf2  in S\\V.}</string>
												</dict>
											</dict>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1211.6053108779276, 1021.3433147816413}</string>
												<key>nodeID</key>
												<string>837871ED-9B60-4537-B35D-5EA605C0B488</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;(b) the proof is similar&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 (b) the proof is similar}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;proof (2 parts, a and b)&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 proof (2 parts, a and b)}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;2.83 f being closed, unbounded and continuous. if f diverges to infinity, f has min; if converges to 0, some x makes f greater (smaller) than 0, f has max (min).&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.83 f being closed, unbounded and continuous. if f diverges to infinity, f has min; if converges to 0, some x makes f greater (smaller) than 0, f has max (min).}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{519.97859864843917, 970.89906488702309}</string>
								<key>nodeID</key>
								<string>0378CDEA-AEBF-4997-90AD-2D77269789B8</string>
								<key>strokeColor</key>
								<string>{0.000, 0.600, 0.600, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{849.27843932270139, 1004.1683625509522}</string>
										<key>nodeID</key>
										<string>3938B3CF-73C6-4956-9957-7CE4CD824628</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;gradient f(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) = lambda gradient G(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) for some lambda in R&lt;/span&gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 gradient f(
\f1\b \cf2 a
\f0\b0 \cf2 ) = lambda gradient G(
\f1\b \cf2 a
\f0\b0 \cf2 ) for some lambda in R}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{1.000, 0.961, 0.863, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{855.69264713502685, 1048.1815834285808}</string>
										<key>nodeID</key>
										<string>F4D258DB-7ED5-4AF1-8851-E3E6C635ACD3</string>
										<key>strokeColor</key>
										<string>{0.000, 0.600, 0.600, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array>
											<dict>
												<key>contentAlignment</key>
												<integer>1</integer>
												<key>fillColor</key>
												<string>{1.000, 0.961, 0.863, 1.000}</string>
												<key>isDecreasingBranchThickness</key>
												<true/>
												<key>isDrawingFill</key>
												<false/>
												<key>isLeftAligned</key>
												<false/>
												<key>location</key>
												<string>{1216.6312139094573, 1048.1815834285808}</string>
												<key>nodeID</key>
												<string>6A22C303-46AF-4E8E-8B64-1ED32B150604</string>
												<key>strokeColor</key>
												<string>{0.000, 0.600, 0.600, 1.000}</string>
												<key>strokeStyle</key>
												<integer>0</integer>
												<key>strokeWidth</key>
												<real>3</real>
												<key>subnodes</key>
												<array/>
												<key>title</key>
												<dict>
													<key>constrainedWidth</key>
													<integer>300</integer>
													<key>htmlText</key>
													<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;if more than two eigenvalues/Level set, say G1 G2, then: gradient f = lambda1 gradient G1 + lambda2 gradient G2 (n+2 constraints then)&lt;/p&gt;</string>
													<key>shrinkToFitContent</key>
													<integer>1</integer>
													<key>text</key>
													<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 if more than two eigenvalues/Level set, say G1 G2, then: gradient f = lambda1 gradient G1 + lambda2 gradient G2 (n+2 constraints then)}</string>
												</dict>
											</dict>
										</array>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;so, basically we have n+1 constraints, every partial f = every partial G times eigenvalue lambda, then G itself = 0 is also a constraint&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 so, basically we have n+1 constraints, every partial f = every partial G times eigenvalue lambda, then G itself = 0 is also a constraint}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;discussion on page 103 deriving the Lagrange Method: gradient of f is orthogonal to the tangent vector at every curve on S passing through &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;. Gradient G(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;) is orthogonal at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;to S since S is a level set of G.&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 discussion on page 103 deriving the Lagrange Method: gradient of f is orthogonal to the tangent vector at every curve on S passing through 
\f1\b \cf2 a
\f0\b0 \cf2 . Gradient G(
\f1\b \cf2 a
\f0\b0 \cf2 ) is orthogonal at 
\f1\b \cf2 a 
\f0\b0 \cf2 to S since S is a level set of G.}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.9 Extreme Value Theorem&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.9 Extreme Value Theorem}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{1.000, 0.961, 0.863, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{286.32631627736714, 1112.9754359195222}</string>
						<key>nodeID</key>
						<string>3AC206FC-F7A1-4F56-99B3-A499079D9734</string>
						<key>strokeColor</key>
						<string>{0.400, 0.200, 0.000, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{1.000, 0.961, 0.863, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{656.87689609472977, 1140.8797611307468}</string>
								<key>nodeID</key>
								<string>B17ABA9B-BAFA-479A-82EB-EE86E16EDECB</string>
								<key>strokeColor</key>
								<string>{0.400, 0.200, 0.000, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='text-align: left; '&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.85 prop: R^m valued function &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;f&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt; is diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;precisely when each of its components f1,…fm is diff at &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;and in this case, D&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;f(a)&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt; is the matrix whose jth row is the row vector gradient fj(&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;a&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;), in other words: D&lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: bold 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans-Bold"; '&gt;f &lt;/span&gt;&lt;span style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;= (partial f1/partial x1, … partial f1/partial xn as the first row, then till partial fm/partial x1,…partial fm/partial xn) altogether m rows, n columns&lt;/span&gt;&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Bold;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.85 prop: R^m valued function 
\f1\b \cf2 f
\f0\b0 \cf2  is diff at 
\f1\b \cf2 a 
\f0\b0 \cf2 precisely when each of its components f1,\'85fm is diff at 
\f1\b \cf2 a 
\f0\b0 \cf2 and in this case, D
\f1\b \cf2 f(a)
\f0\b0 \cf2  is the matrix whose jth row is the row vector gradient fj(
\f1\b \cf2 a
\f0\b0 \cf2 ), in other words: D
\f1\b \cf2 f 
\f0\b0 \cf2 = (partial f1/partial x1, \'85 partial f1/partial xn as the first row, then till partial fm/partial x1,\'85partial fm/partial xn) altogether m rows, n columns}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; -cocoa-font-postscriptname: "GillSans"; '&gt;2.10 Vector-Valued Functions and Their Derivatives&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 2.10 Vector-Valued Functions and Their Derivatives}</string>
						</dict>
					</dict>
				</array>
				<key>title</key>
				<dict>
					<key>constrainedWidth</key>
					<integer>300</integer>
					<key>htmlText</key>
					<string>&lt;p style='color: rgba(102, 102, 102, 1.000000); font: 14px "Gill Sans"; text-align: left; -cocoa-font-postscriptname: "GillSans"; '&gt;MAT237 MIDTERM&lt;/p&gt;</string>
					<key>shrinkToFitContent</key>
					<integer>1</integer>
					<key>text</key>
					<string>{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red102\green102\blue102;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 MAT237 MIDTERM}</string>
				</dict>
			</dict>
		</array>
	</dict>
	<key>printInfo</key>
	<data>
	BAtzdHJlYW10eXBlZIHoA4QBQISEhAtOU1ByaW50SW5mbwGEhAhOU09iamVjdACFkoSE
	hBNOU011dGFibGVEaWN0aW9uYXJ5AISEDE5TRGljdGlvbmFyeQCUhAFpCJKEhIQITlNT
	dHJpbmcBlIQBKxZOU0hvcml6b250YWxseUNlbnRlcmVkhpKEhIQITlNOdW1iZXIAhIQH
	TlNWYWx1ZQCUhAEqhIQBY50BhpKEmZkNTlNSaWdodE1hcmdpboaShJuchIQBZp5IhpKE
	mZkMTlNMZWZ0TWFyZ2luhpKEm5ygnkiGkoSZmRVOU0hvcml6b25hbFBhZ2luYXRpb26G
	koSbnISXlwKGkoSZmRROU1ZlcnRpY2FsUGFnaW5hdGlvboaShJucpZcAhpKEmZkUTlNW
	ZXJ0aWNhbGx5Q2VudGVyZWSGkpqShJmZC05TVG9wTWFyZ2luhpKEm5ygnlqGkoSZmQ5O
	U0JvdHRvbU1hcmdpboaShJucoJ5ahoaG
	</data>
	<key>title</key>
	<string>MAT237 MIDTERM</string>
	<key>version</key>
	<integer>4</integer>
</dict>
</plist>
