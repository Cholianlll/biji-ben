log_likelihood <- function(p, x1,y1){
  a = p[1];b = p[2];s = p[3];d = p[4]
  e = (y1-a-b*x1)/exp(s)
  v = 1/d^2
  log_l = sum(dt(e,v,log=T)) - length(x1)*s
  return (log_l)
}


log_prior = function(p)
{log(dnorm(p[1],mean =0,sd = 100)*dnorm(p[2],mean =0,sd = 100)*dnorm(p[3],mean =0,sd = 10))

}

log_posterior = function(p,x,y)
{
if (p[4]>1 || p[4]<0)
	return  (-Inf)
else 
	return(log_likelihood(p,x,y)+log_prior(p))
}


######################

metropolis = function(x,y,i_v,sd,n){
params = matrix(nrow =n,ncol = 4)
temp = i_v
accept = numeric(n)
log_posterior_vector= numeric(n)
for (i in 1:n){
	temp_p = rnorm(4,temp,rep(sd,4))
	if (runif(1)< min(1,exp(log_posterior(temp_p,x,y) - log_posterior(temp,x,y))))
  		{temp = temp_p
		 accept[i] = TRUE
             }

	else {accept[i] = FALSE}
	params[i,] = temp            
      log_posterior_vector[i] = log_posterior(temp,x,y)	
}

res <- list("params" = params, "accept" = accept, "log_posterior"=log_posterior_vector);
res
}

############

ini_ab = function(x,y)
{m1 = lm(y~x)
a = coef(m1)[1]
b = coef(m1)[2]
return (c(a,b))
}


burn_in <- function(acc)
{
max = length(acc)
avg = mean(acc)
n = 0
temp = 1
while (temp > 1.05*avg || temp<0.95*avg)
 	{n = n+0.01*max
	 temp = mean(acc[n:max])
 	}
return (n+0.01*max)
}


######################################
##     Output for dataset x1,       ##
######################################
set.seed(1)
n1 <- 25
x1 <- runif(n1,-1,1)
y1 <- 0.1 + 3.7*x1 + 0.3*rt(n1,4.2)

res_1 = metropolis(x1,y1,c(ini_ab(x1,y1),1,1),0.1,100000);
data = as.data.frame(res_1$params)
colnames(data) = c("a","b","s","d")
###### a
seq_1 = seq(1,100000,30)
burn_in_num = burn_in(res_1$accept)
plot(data[seq_1,1],ylab = "a",main = "Point plot of a at every 30 iteration",pch =20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,2],ylab = "b",main = "Point plot of b at every 30 iteration",pch=20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,3],ylab = "s",main = "Point plot of s at every 30 iteration",pch =20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,4],ylab = "d",main = "Point plot of d at every 30 iteration",pch = 20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
##### b
burn_in_num = burn_in(res_1$accept)
seq_2 = seq(burn_in_num,100000,10)
data_new = as.data.frame(res_1$params[seq_2,])
colnames(data_new) = c("a","b","s","d")
plot(data_new[,1],data_new[,2],xlab = "a",ylab ="b",main = "Pairwaise scatterplots a v.s b",pch = 20)
plot(data_new[,1],data_new[,3],xlab = "a",ylab ="s",main = "Pairwaise scatterplots a v.s s",pch = 20)
plot(data_new[,1],data_new[,4],xlab = "a",ylab ="d",main = "Pairwaise scatterplots a v.s d",pch = 20)
plot(data_new[,2],data_new[,3],xlab = "b",ylab ="s",main = "Pairwaise scatterplots b v.s s",pch = 20)
plot(data_new[,2],data_new[,4],xlab = "b",ylab ="d",main = "Pairwaise scatterplots b v.s d",pch = 20)
plot(data_new[,3],data_new[,4],xlab = "s",ylab ="d",main = "Pairwaise scatterplots s v.s d",pch = 20)

##### c
coefficient = data_new[,1:2]
m1 = lm(y1~x1)


plot(x1,y1,main = "Regression line plot",col = "red",pch= 20)
for (i in 1:length(coefficient[,1]))
	abline(coef = coefficient[i,])
par(new = TRUE)
plot(x1,y1,main = "Regression line plot",col = "red",pch= 20)
abline(coef = m1$coefficients,col = "green",lwd = 2)


######################################
##     Output for dataset x2        ##
######################################



set.seed(2)
n2 <- 50
x2 <- runif(n2,0,1)
y2 <- -0.9 + 2.1*x2 + 0.1*rt(n2,1.3)



res_2 = metropolis(x2,y2,c(ini_ab(x2,y2),1,1),0.1,100000);
data = as.data.frame(res_2$params)
colnames(data) = c("a","b","s","d")
###### a
seq_1 = seq(1,100000,30)
burn_in_num = burn_in(res_2$accept)
plot(data[seq_1,1],ylab = "a",main = "Point plot of a at every 30 iteration",pch =20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,2],ylab = "b",main = "Point plot of b at every 30 iteration",pch=20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,3],ylab = "s",main = "Point plot of s at every 30 iteration",pch =20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
plot(data[seq_1,4],ylab = "d",main = "Point plot of d at every 30 iteration",pch = 20)
abline(v = burn_in_num/30,col = "red",lwd = 2)
##### b
burn_in_num = burn_in(res_2$accept)
seq_2 = seq(burn_in_num,100000,10)
data_new = as.data.frame(res_2$params[seq_2,])
colnames(data_new) = c("a","b","s","d")
plot(data_new[,1],data_new[,2],xlab = "a",ylab ="b",main = "Pairwaise scatterplots a v.s b",pch = 20)
plot(data_new[,1],data_new[,3],xlab = "a",ylab ="s",main = "Pairwaise scatterplots a v.s s",pch = 20)
plot(data_new[,1],data_new[,4],xlab = "a",ylab ="d",main = "Pairwaise scatterplots a v.s d",pch = 20)
plot(data_new[,2],data_new[,3],xlab = "b",ylab ="s",main = "Pairwaise scatterplots b v.s s",pch = 20)
plot(data_new[,2],data_new[,4],xlab = "b",ylab ="d",main = "Pairwaise scatterplots b v.s d",pch = 20)
plot(data_new[,3],data_new[,4],xlab = "s",ylab ="d",main = "Pairwaise scatterplots s v.s d",pch = 20)

##### c
coefficient = data_new[,1:2]
m1 = lm(y2~x2)


plot(x2,y2,main = "Regression line plot",col = "red",pch= 20)
for (i in 1:length(coefficient[,1]))
	abline(coef = coefficient[i,])
par(new = TRUE)
plot(x2,y2,main = "Regression line plot",col = "red",pch= 20)
abline(coef = m1$coefficients,col = "green",lwd = 2)



#############################
#part2
x_t = 0.9
burn_in_1 = burn_in(res_1$accept)
burn_in_2 = burn_in(res_2$accept)
coef_1 = res_1$params[burn_in_1:100000,1:2]
a_1 = mean(coef_1[,1])
b_1 = mean(coef_1[,2])
m1 = lm(y1~x1)


pred_1_m = a_1+b_1*x_t
pred_1_lm = m1$coefficients %*% c(1,x_t)


coef_2 = res_2$params[burn_in_2:100000,1:2]
a_2 = mean(coef_2[,1])
b_2 = mean(coef_2[,2])
m2 = lm(y2~x2)

pred_2_m = a_2+b_2*x_t
pred_2_lm = m2$coefficients %*% c(1,x_t)

##
set.seed(1)
n2 <- 50
x2 <- runif(n2,0,1)
y2 <- -0.9 + 2.1*x2 + 0.1*rt(n2,1.3)
set.seed(1)
n1 <- 25
x1 <- runif(n1,-1,1)
y1 <- 0.1 + 3.7*x1 + 0.3*rt(n1,4.2)


x_new = 0.9
a_1 = c()
b_1 = c()
a_2 = c()
b_2 = c()
pred_1_m=c()
pred_1_lm = c()
pred_2_m = c()
peed_2_lm = c()
lm_coef_1 = c()
lm_coef_2 = c()
for (i in 1:10){
	set.seed(10*i)
	res_1 = metropolis(x1,y1,c(ini_ab(x1,y1),1,1),0.1,10000)
	res_2 = metropolis(x2,y2,c(ini_ab(x2,y2),1,1),0.1,10000)
	a_1 = c(a_1, mean(res_1$params[,1]))
	b_1 = c(b_1, mean(res_1$params[,2]))
	pred_1_m = c(pred_1_m,a_1[i]+b_1[i]*x_new)
	a_2 = c(a_2, mean(res_2$params[,1]))
	b_2 = c(b_2, mean(res_2$params[,2]))
	pred_2_m = c(pred_2_m,a_2[i]+b_2[i]*x_new)
}
data_25 = as.data.frame(t(rbind(a_1,b_1,pred_1_m)))
colnames(data_25) = c("Metropolis coef a","Metropolis coef b","Metropolis Prediction");data_25

data_50 = as.data.frame(t(rbind(a_2,b_2,pred_2_m)))
colnames(data_50) = c("Metropolis coef a","Metropolis coef b","Metropolis Prediction");data_50









